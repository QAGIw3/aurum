openapi: 3.0.3
info:
  title: Aurum API
  version: 0.1.0
  description: API for retrieving market intelligence data, managing scenarios, and valuing PPAs.
servers:
  - url: https://api.aurum.local
    description: Local development gateway
  - url: https://api.aurum.prod
    description: Production
security:
  - oauth2: [aurum]

paths:
  /v1/curves:
    get:
      summary: Retrieve curve observations with filtering by identity and tenor.
      operationId: listCurves
      security:
        - oauth2: [aurum]
      parameters:
        - $ref: '#/components/parameters/AsOfDate'
        - $ref: '#/components/parameters/AssetClass'
        - $ref: '#/components/parameters/Iso'
        - $ref: '#/components/parameters/Location'
        - $ref: '#/components/parameters/Market'
        - $ref: '#/components/parameters/Product'
        - $ref: '#/components/parameters/Block'
        - $ref: '#/components/parameters/TenorType'
        - $ref: '#/components/parameters/CurveKey'
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          description: Maximum number of rows to return (capped at 500 by the service).
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
          description: Offset for pagination.
        - name: cursor
          in: query
          schema:
            type: string
          description: Opaque cursor for stable pagination.
        - name: since_cursor
          in: query
          schema:
            type: string
          description: Alias for `cursor` to resume iteration from a previously returned `next_cursor`.
        - name: prev_cursor
          in: query
          schema:
            type: string
          description: Cursor pointing to the previous page; use the `meta.prev_cursor` value from a prior response.
        - name: format
          in: query
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: Curve data retrieved.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurveResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/iso/lmp/last-24h:
    get:
      summary: Latest ISO LMP observations
      description: Return the most recent 24 hours of ISO LMP records across all markets.
      operationId: listIsoLmpLast24h
      security:
        - oauth2: [aurum]
      parameters:
        - name: iso_code
          in: query
          schema:
            type: string
          description: Filter by ISO code (e.g. MISO, CAISO).
        - name: market
          in: query
          schema:
            type: string
          description: Filter by market name (DAY_AHEAD, REAL_TIME, etc.).
        - name: location_id
          in: query
          schema:
            type: string
          description: Settlement location identifier filter.
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 2000
          description: Maximum number of records to return (default 500).
        - name: format
          in: query
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: ISO LMP records returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoLmpResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/iso/lmp/hourly:
    get:
      summary: Hourly ISO LMP aggregates
      description: Return aggregated hourly ISO LMP values, optionally filtered by interval_start.
      operationId: listIsoLmpHourlyAggregates
      security:
        - oauth2: [aurum]
      parameters:
        - name: iso_code
          in: query
          schema:
            type: string
        - name: market
          in: query
          schema:
            type: string
        - name: location_id
          in: query
          schema:
            type: string
        - name: start
          in: query
          schema:
            type: string
            format: date-time
          description: Earliest interval_start (inclusive).
        - name: end
          in: query
          schema:
            type: string
            format: date-time
          description: Latest interval_start (inclusive).
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 2000
          description: Maximum number of rows to return (default 500).
        - name: format
          in: query
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: ISO LMP hourly aggregates returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoLmpAggregateResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          description: Invalid time range supplied.
  /v1/iso/lmp/daily:
    get:
      summary: Daily ISO LMP aggregates
      description: Return daily ISO LMP aggregates, optionally filtered by interval_start.
      operationId: listIsoLmpDailyAggregates
      security:
        - oauth2: [aurum]
      parameters:
        - name: iso_code
          in: query
          schema:
            type: string
        - name: market
          in: query
          schema:
            type: string
        - name: location_id
          in: query
          schema:
            type: string
        - name: start
          in: query
          schema:
            type: string
            format: date-time
          description: Earliest interval_start (inclusive).
        - name: end
          in: query
          schema:
            type: string
            format: date-time
          description: Latest interval_start (inclusive).
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 2000
          description: Maximum number of rows to return (default 500).
        - name: format
          in: query
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: ISO LMP daily aggregates returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoLmpAggregateResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          description: Invalid time range supplied.
  /v1/iso/lmp/negative:
    get:
      summary: Recent negative ISO LMP events
      description: Return the most negative ISO LMP observations across the last seven days.
      operationId: listIsoLmpNegativePrices
      security:
        - oauth2: [aurum]
      parameters:
        - name: iso_code
          in: query
          schema:
            type: string
        - name: market
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          description: Maximum number of rows to return (default 200).
        - name: format
          in: query
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: ISO LMP records returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoLmpResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/drought/dimensions:
    get:
      summary: List available drought datasets, indices, and layers.
      operationId: listDroughtDimensions
      security:
        - oauth2: [aurum]
      responses:
        '200':
          description: Dimension catalogs returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroughtDimensionsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/drought/indices:
    get:
      summary: Retrieve drought index time series aggregated by geography.
      operationId: listDroughtIndices
      security:
        - oauth2: [aurum]
      parameters:
        - name: dataset
          in: query
          schema:
            type: string
          required: false
          description: Source dataset key (nclimgrid, acis, cpc, prism, eddi).
        - name: index
          in: query
          schema:
            type: string
          required: false
          description: Drought index (SPI, SPEI, EDDI, PDSI, QuickDRI, VHI).
        - name: timescale
          in: query
          schema:
            type: string
          required: false
          description: Accumulation timescale such as 1M, 3M, 6M, 12M.
        - name: region
          in: query
          schema:
            type: string
          required: false
          description: Combined region specifier in the form REGION_TYPE:REGION_ID.
        - name: region_type
          in: query
          schema:
            type: string
          required: false
          description: Region type (ISO_NODE, ISO_ZONE, STATE, COUNTY, HUC2, HUC8).
        - name: region_id
          in: query
          schema:
            type: string
          required: false
          description: Region identifier corresponding to the chosen region_type.
        - name: start
          in: query
          schema:
            type: string
            format: date
          required: false
          description: Inclusive start date (YYYY-MM-DD).
        - name: end
          in: query
          schema:
            type: string
            format: date
          required: false
          description: Inclusive end date (YYYY-MM-DD).
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
          required: false
          description: Maximum number of rows to return (default 250).
      responses:
        '200':
          description: Drought index rows returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroughtIndexResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/drought/usdm:
    get:
      summary: Retrieve USDM area fractions by geography.
      operationId: listDroughtUsdm
      security:
        - oauth2: [aurum]
      parameters:
        - name: region
          in: query
          schema:
            type: string
          required: false
          description: Combined region specifier REGION_TYPE:REGION_ID.
        - name: region_type
          in: query
          schema:
            type: string
          required: false
          description: Region type (ISO_ZONE, STATE, COUNTY, HUC2, HUC8, etc.).
        - name: region_id
          in: query
          schema:
            type: string
          required: false
          description: Region identifier value.
        - name: start
          in: query
          schema:
            type: string
            format: date
          required: false
          description: Inclusive start valid_date.
        - name: end
          in: query
          schema:
            type: string
            format: date
          required: false
          description: Inclusive end valid_date.
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
          required: false
          description: Maximum number of rows to return (default 250).
      responses:
        '200':
          description: USDM area fractions returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroughtUsdmResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/drought/layers:
  /v1/drought/tiles/{dataset}/{index}/{timescale}/{z}/{x}/{y}.png:
    get:
      summary: Proxy XYZ tiles for drought rasters.
      operationId: proxyDroughtTile
      parameters:
        - name: dataset
          in: path
          required: true
          schema:
            type: string
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: timescale
          in: path
          required: true
          schema:
            type: string
        - name: z
          in: path
          required: true
          schema:
            type: integer
        - name: x
          in: path
          required: true
          schema:
            type: integer
        - name: y
          in: path
          required: true
          schema:
            type: integer
        - name: valid_date
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Valid date (YYYY-MM-DD) for the raster.
      responses:
        '200':
          description: PNG tile payload.
          content:
            image/png:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/drought/info/{dataset}/{index}/{timescale}:
    get:
      summary: Retrieve info.json metadata for drought raster tiles.
      operationId: getDroughtTileInfo
      parameters:
        - name: dataset
          in: path
          required: true
          schema:
            type: string
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: timescale
          in: path
          required: true
          schema:
            type: string
        - name: valid_date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: info.json payload returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroughtInfoResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      summary: Retrieve vector overlay events (QPF, AHPS, AQI, wildfire, etc.).
      operationId: listDroughtLayers
      security:
        - oauth2: [aurum]
      parameters:
        - name: layer
          in: query
          schema:
            type: string
          required: false
          description: Layer key (qpf, ahps_flood, aqi, wildfire).
        - name: region
          in: query
          schema:
            type: string
          required: false
          description: Combined region specifier REGION_TYPE:REGION_ID.
        - name: region_type
          in: query
          schema:
            type: string
          required: false
          description: Region type filter.
        - name: region_id
          in: query
          schema:
            type: string
          required: false
          description: Region identifier filter.
        - name: start
          in: query
          schema:
            type: string
            format: date-time
          required: false
          description: Earliest valid_start timestamp (ISO 8601).
        - name: end
          in: query
          schema:
            type: string
            format: date-time
          required: false
          description: Latest valid_end/valid_start timestamp (ISO 8601).
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
          required: false
          description: Maximum number of events to return (default 250).
      responses:
        '200':
          description: Vector overlay events returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroughtVectorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/scenarios:
    get:
      summary: List scenarios for the authenticated tenant.
      operationId: listScenarios
      security:
        - oauth2: [aurum]
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - name: status
          in: query
          required: false
          schema:
            type: string
          description: Optional scenario status filter
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Opaque cursor for stable pagination
        - name: since_cursor
          in: query
          required: false
          schema:
            type: string
          description: Resume iteration from a previously returned cursor
      responses:
        '200':
          description: Scenarios returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Create a new scenario definition with assumptions.
      operationId: createScenario
      security:
        - oauth2: [aurum]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScenarioRequest'
      responses:
        '201':
          description: Scenario created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /v1/scenarios/{id}:
    get:
      summary: Retrieve a scenario definition.
      operationId: getScenario
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Scenario metadata retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioResponse'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a scenario definition and associated runs.
      operationId: deleteScenario
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Scenario deleted.
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/scenarios/{id}/run:
    post:
      summary: Trigger a scenario run asynchronously via Kafka.
      operationId: runScenario
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioRunOptions'
      responses:
        '202':
          description: Scenario run accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRunResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/scenarios/{id}/runs:
    get:
      summary: List runs for a scenario.
      operationId: listScenarioRuns
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Optional run state filter
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Opaque cursor for run pagination
        - name: since_cursor
          in: query
          required: false
          schema:
            type: string
          description: Resume iteration from a previously returned run cursor
      responses:
        '200':
          description: Scenario runs returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRunListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/scenarios/{id}/runs/{run_id}:
    get:
      summary: Get the status of a scenario run.
      operationId: getScenarioRun
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: run_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Scenario run status returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRunResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/scenarios/runs/{run_id}/cancel:
    post:
      summary: Cancel a scenario run.
      operationId: cancelScenarioRun
      security:
        - oauth2: [aurum]
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Scenario run cancelled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRunResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/scenarios/runs/{run_id}/state:
    post:
      summary: Update the state of a scenario run.
      operationId: updateScenarioRunState
      security:
        - oauth2: [aurum]
      parameters:
        - name: run_id
          in: path
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
            pattern: ^(QUEUED|RUNNING|SUCCEEDED|FAILED|CANCELLED)$
      responses:
        '200':
          description: Scenario run state updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioRunResponse'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/scenarios/{id}/outputs:
    get:
      summary: List scenario outputs
      operationId: listScenarioOutputs
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: metric
          in: query
          schema:
            type: string
          required: false
        - name: tenor_type
          in: query
          schema:
            type: string
          required: false
        - name: curve_key
          in: query
          schema:
            type: string
          required: false
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          required: false
          description: Maximum number of rows to return (capped at 500 by the service).
        - name: cursor
          in: query
          schema:
            type: string
          required: false
          description: Opaque cursor for stable pagination.
        - name: since_cursor
          in: query
          schema:
            type: string
          required: false
          description: Alias for `cursor` to resume iteration from a previously returned `next_cursor`.
        - name: prev_cursor
          in: query
          schema:
            type: string
          required: false
          description: Cursor pointing to the previous page; use the `meta.prev_cursor` value from a prior response.
        - name: format
          in: query
          required: false
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: Scenario outputs.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioOutputResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/scenarios/{id}/metrics/latest:
    get:
      summary: List latest scenario metrics
      operationId: listScenarioMetricsLatest
      security:
        - oauth2: [aurum]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: metric
          in: query
          required: false
          schema:
            type: string
          description: Optional metric filter (e.g., mid)
      responses:
        '200':
          description: Latest metric snapshots per scenario metric.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioMetricLatestResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/ppa/contracts:
    get:
      summary: List PPA contracts.
      operationId: listPpaContracts
      security:
        - oauth2: [aurum]
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
          description: Maximum number of contracts to return.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Offset used for pagination (alternative to cursor).
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Cursor token obtained from `meta.next_cursor`.
        - name: since_cursor
          in: query
          required: false
          schema:
            type: string
          description: Alias for `cursor` to resume a prior listing.
      responses:
        '200':
          description: Collection of PPA contracts for the tenant.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpaContractListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      summary: Create a new PPA contract definition.
      operationId: createPpaContract
      security:
        - oauth2: [aurum]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PpaContractCreate'
      responses:
        '201':
          description: Contract created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpaContractResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/ppa/contracts/{contract_id}:
    get:
      summary: Retrieve a PPA contract.
      operationId: getPpaContract
      security:
        - oauth2: [aurum]
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Requested contract.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpaContractResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: Update attributes on a PPA contract.
      operationId: updatePpaContract
      security:
        - oauth2: [aurum]
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PpaContractUpdate'
      responses:
        '200':
          description: Updated contract definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpaContractResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a PPA contract.
      operationId: deletePpaContract
      security:
        - oauth2: [aurum]
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Contract deleted.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/ppa/contracts/{contract_id}/valuations:
    get:
      summary: List historical valuations for a PPA contract.
      operationId: listPpaContractValuations
      security:
        - oauth2: [aurum]
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
        - name: scenario_id
          in: query
          required: false
          schema:
            type: string
          description: Filter valuations to a specific scenario.
        - name: metric
          in: query
          required: false
          schema:
            type: string
          description: Filter by metric label (e.g., NPV, IRR).
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
          description: Maximum number of valuation rows to return.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: cursor
          in: query
          required: false
          schema:
            type: string
        - name: since_cursor
          in: query
          required: false
          schema:
            type: string
        - name: prev_cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Valuation records stored for the contract.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpaValuationListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/ppa/valuate:
    post:
      summary: Calculate cashflows and risk metrics for a PPA contract.
      description: Requires a scenario identifier; the valuation pulls latest scenario outputs from Iceberg for the authenticated tenant.
      operationId: valuatePpa
      security:
        - oauth2: [aurum]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PpaValuationRequest'
      responses:
        '200':
          description: Valuation results produced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PpaValuationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /v1/curves/diff:
    get:
      summary: Diff curve observations between two as-of dates.
      operationId: diffCurves
      security:
        - oauth2: [aurum]
      parameters:
        - name: asof_a
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: asof_b
          in: query
          required: true
          schema:
            type: string
            format: date
        - $ref: '#/components/parameters/AssetClass'
        - $ref: '#/components/parameters/Iso'
        - $ref: '#/components/parameters/Location'
        - $ref: '#/components/parameters/Market'
        - $ref: '#/components/parameters/Product'
        - $ref: '#/components/parameters/Block'
        - $ref: '#/components/parameters/TenorType'
        - $ref: '#/components/parameters/CurveKey'
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Curve diff results.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurveDiffResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /ready:
    get:
      summary: Readiness probe
      operationId: readinessProbe
      security: []
      responses:
        '200':
          description: Service is ready to receive traffic.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ready
                  checks:
                    type: object
                    additionalProperties:
                      type: boolean
        '503':
          description: Dependencies unavailable.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: object
                    properties:
                      status:
                        type: string
                        example: unavailable
                      checks:
                        type: object
                        additionalProperties:
                          type: boolean
  /metrics:
    get:
      summary: Prometheus metrics
      operationId: getMetrics
      tags:
        - System
      security: []
      responses:
        '200':
          description: Prometheus metrics payload.
          content:
            text/plain:
              schema:
                type: string
  /v1/metadata/dimensions:
    get:
      summary: List distinct dimension values useful for filters.
      operationId: listDimensions
      security:
        - oauth2: [aurum]
      parameters:
        - $ref: '#/components/parameters/AsOfDate'
        - $ref: '#/components/parameters/AssetClass'
        - $ref: '#/components/parameters/Iso'
        - $ref: '#/components/parameters/Location'
        - $ref: '#/components/parameters/Market'
        - $ref: '#/components/parameters/Product'
        - $ref: '#/components/parameters/Block'
        - $ref: '#/components/parameters/TenorType'
        - name: per_dim_limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: prefix
          in: query
          schema:
            type: string
          description: Optional case-insensitive startswith filter applied to each dimension list
        - name: include_counts
          in: query
          schema:
            type: boolean
          description: Include per-dimension counts when true
      responses:
        '200':
          description: Dimension values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DimensionsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/locations:
    get:
      summary: List ISO locations
      operationId: listIsoLocations
      tags:
        - Metadata
      security:
        - oauth2: [aurum]
      parameters:
        - name: iso
          in: query
          required: false
          schema:
            type: string
          description: Filter by ISO code (e.g., PJM, CAISO)
        - name: prefix
          in: query
          required: false
          schema:
            type: string
          description: Case-insensitive startswith filter applied to id or name
      responses:
        '200':
          description: ISO location metadata returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoLocationsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/locations/{iso}/{location_id}:
    get:
      summary: Get ISO location
      operationId: getIsoLocation
      tags:
        - Metadata
      security:
        - oauth2: [aurum]
      parameters:
        - name: iso
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ISO location metadata returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsoLocationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Location not found
  /v1/metadata/units:
    get:
      summary: List canonical currencies and units
      operationId: listUnits
      tags:
        - Metadata
        - Units
      security:
        - oauth2: [aurum]
      parameters:
        - name: prefix
          in: query
          required: false
          schema:
            type: string
          description: Optional case-insensitive startswith filter
      responses:
        '200':
          description: Canonical currency and unit lists returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitsCanonicalResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/units/mapping:
    get:
      summary: List unit mappings
      operationId: listUnitMappings
      tags:
        - Metadata
        - Units
      security:
        - oauth2: [aurum]
      parameters:
        - name: prefix
          in: query
          required: false
          schema:
            type: string
          description: Case-insensitive startswith filter on the raw units string
      responses:
        '200':
          description: Unit mappings returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitsMappingResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/calendars:
    get:
      summary: List calendars
      operationId: listCalendars
      tags:
        - Metadata
      security:
        - oauth2: [aurum]
      responses:
        '200':
          description: Calendar metadata returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/calendars/{name}/blocks:
    get:
      summary: List calendar blocks
      operationId: listCalendarBlocks
      tags:
        - Metadata
      security:
        - oauth2: [aurum]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Calendar block names returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarBlocksResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Calendar not found
  /v1/metadata/calendars/{name}/hours:
    get:
      summary: Block hours for a date
      operationId: listCalendarHours
      tags:
        - Metadata
      security:
        - oauth2: [aurum]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: block
          in: query
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Calendar block hours returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarHoursResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/calendars/{name}/expand:
    get:
      summary: Expand block over date range
      operationId: expandCalendarBlock
      tags:
        - Metadata
      security:
        - oauth2: [aurum]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: block
          in: query
          required: true
          schema:
            type: string
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Calendar block occurrences returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarHoursResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/eia/datasets:
    get:
      summary: List EIA datasets
      operationId: listEiaDatasets
      tags:
        - Metadata
        - EIA
      security:
        - oauth2: [aurum]
      parameters:
        - name: prefix
          in: query
          required: false
          schema:
            type: string
          description: Case-insensitive startswith filter applied to dataset path or name
      responses:
        '200':
          description: EIA datasets returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EiaDatasetsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/metadata/eia/datasets/{dataset_path}:
    get:
      summary: Get EIA dataset
      operationId: getEiaDataset
      tags:
        - Metadata
        - EIA
      security:
        - oauth2: [aurum]
      parameters:
        - name: dataset_path
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detailed dataset metadata returned.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EiaDatasetResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Dataset not found
  /v1/curves/strips:
    get:
      summary: Retrieve non-monthly (strip) curves by type.
      operationId: listStrips
      security:
        - oauth2: [aurum]
      parameters:
        - $ref: '#/components/parameters/AsOfDate'
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: [CALENDAR, SEASON, QUARTER]
        - $ref: '#/components/parameters/CurveKey'
        - $ref: '#/components/parameters/AssetClass'
        - $ref: '#/components/parameters/Iso'
        - $ref: '#/components/parameters/Location'
        - $ref: '#/components/parameters/Market'
        - $ref: '#/components/parameters/Product'
        - $ref: '#/components/parameters/Block'
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Strip curves retrieved.
          headers:
            ETag:
              description: Strong entity tag for cache validation.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurveResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /v1/ref/eia/series:
    get:
      tags: [Metadata, EIA]
      summary: List EIA series observations
      operationId: listEiaSeries
      security:
        - oauth2: [aurum]
      parameters:
        - name: series_id
          in: query
          required: false
          schema:
            type: string
        - name: frequency
          in: query
          required: false
          schema:
            type: string
        - name: area
          in: query
          required: false
          schema:
            type: string
        - name: sector
          in: query
          required: false
          schema:
            type: string
        - name: dataset
          in: query
          required: false
          schema:
            type: string
        - name: unit
          in: query
          required: false
          schema:
            type: string
        - name: source
          in: query
          required: false
          schema:
            type: string
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Include observations with period_start >= this timestamp (ISO 8601)
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Include observations with period_start <= this timestamp (ISO 8601)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 2000
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Forward pagination cursor returned from meta.next_cursor
        - name: since_cursor
          in: query
          required: false
          schema:
            type: string
          description: Alias for cursor
        - name: prev_cursor
          in: query
          required: false
          schema:
            type: string
          description: Cursor returned from meta.prev_cursor to page backwards
        - name: format
          in: query
          required: false
          description: Response format (set to `csv` to stream results).
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        '200':
          description: EIA series observations returned
          headers:
            ETag:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EiaSeriesResponse'
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'

  /v1/ref/eia/series/dimensions:
    get:
      tags: [Metadata, EIA]
      summary: List EIA series dimensions
      operationId: listEiaSeriesDimensions
      security:
        - oauth2: [aurum]
      parameters:
        - name: series_id
          in: query
          required: false
          schema:
            type: string
        - name: frequency
          in: query
          required: false
          schema:
            type: string
        - name: area
          in: query
          required: false
          schema:
            type: string
        - name: sector
          in: query
          required: false
          schema:
            type: string
        - name: dataset
          in: query
          required: false
          schema:
            type: string
        - name: unit
          in: query
          required: false
          schema:
            type: string
        - name: source
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Distinct dimension values returned
          headers:
            ETag:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EiaSeriesDimensionsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/admin/cache/eia/series/invalidate:
    post:
      summary: Invalidate cached EIA series queries
      operationId: invalidateEiaSeriesCache
      tags:
        - Admin
      responses:
        '200':
          description: Cache purge result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachePurgeResponse'
  /v1/admin/cache/metadata/{scope}/invalidate:
    post:
      summary: Invalidate metadata caches
      operationId: invalidateMetadataCache
      tags:
        - Admin
      parameters:
        - name: scope
          in: path
          required: true
          schema:
            type: string
        - name: iso
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Cache purge result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachePurgeResponse'
  /v1/drought/layers:
    get:
      summary: List drought vector layers
      operationId: listDroughtLayers
      tags:
        - Drought
      responses:
        '200':
          description: Vector layers metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroughtVectorResponse'
  /health:
    get:
      summary: Health check
      operationId: getHealth
      tags:
        - System
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.aurum.local/oauth2/auth
          tokenUrl: https://auth.aurum.local/oauth2/token
          scopes:
            aurum: Full access to Aurum APIs
  parameters:
    AsOfDate:
      name: asof
      in: query
      required: false
      schema:
        type: string
        format: date
      description: Filter by as-of date.
    AssetClass:
      name: asset_class
      in: query
      schema:
        type: string
      required: false
    Iso:
      name: iso
      in: query
      schema:
        type: string
      required: false
    Location:
      name: location
      in: query
      schema:
        type: string
      required: false
    Market:
      name: market
      in: query
      schema:
        type: string
      required: false
    Product:
      name: product
      in: query
      schema:
        type: string
      required: false
    Block:
      name: block
      in: query
      schema:
        type: string
      required: false
    TenorType:
      name: tenor_type
      in: query
      schema:
        type: string
        enum: [MONTHLY, CALENDAR, SEASON, QUARTER]
      required: false
    CurveKey:
      name: curve_key
      in: query
      schema:
        type: string
      required: false
  responses:
    Unauthorized:
      description: Authentication failed or missing token.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Request validation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Requested resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    Meta:
      type: object
      properties:
        request_id:
          type: string
        query_time_ms:
          type: integer
        next_cursor:
          type: string
          nullable: true
        prev_cursor:
          type: string
          nullable: true
    CurvePoint:
      type: object
      required: [curve_key, tenor_label, mid]
      properties:
        curve_key:
          type: string
        tenor_label:
          type: string
        tenor_type:
          type: string
        contract_month:
          type: string
          format: date
          nullable: true
        mid:
          type: number
        bid:
          type: number
          nullable: true
        ask:
          type: number
          nullable: true
        price_type:
          type: string
          nullable: true
        asof_date:
          type: string
          format: date
    CurveResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CurvePoint'
    CurveDiffPoint:
      type: object
      required: [curve_key, tenor_label, asof_a, asof_b]
      properties:
        curve_key:
          type: string
        tenor_label:
          type: string
        tenor_type:
          type: string
          nullable: true
        contract_month:
          type: string
          format: date
          nullable: true
        asof_a:
          type: string
          format: date
        mid_a:
          type: number
          nullable: true
        asof_b:
          type: string
          format: date
        mid_b:
          type: number
          nullable: true
        diff_abs:
          type: number
          nullable: true
        diff_pct:
          type: number
          nullable: true
    CurveDiffResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CurveDiffPoint'
    DroughtIndexPoint:
      type: object
      required: [series_id, dataset, index, timescale, valid_date, region_type, region_id]
      properties:
        series_id:
          type: string
        dataset:
          type: string
        index:
          type: string
        timescale:
          type: string
        valid_date:
          type: string
          format: date
        as_of:
          type: string
          format: date-time
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          nullable: true
        poc:
          type: string
          nullable: true
        region_type:
          type: string
        region_id:
          type: string
        region_name:
          type: string
          nullable: true
        parent_region_id:
          type: string
          nullable: true
        source_url:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
    DroughtIndexResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DroughtIndexPoint'
    DroughtUsdmPoint:
      type: object
      required: [region_type, region_id, valid_date]
      properties:
        region_type:
          type: string
        region_id:
          type: string
        region_name:
          type: string
          nullable: true
        parent_region_id:
          type: string
          nullable: true
        valid_date:
          type: string
          format: date
        as_of:
          type: string
          format: date-time
          nullable: true
        d0_frac:
          type: number
          format: double
          nullable: true
        d1_frac:
          type: number
          format: double
          nullable: true
        d2_frac:
          type: number
          format: double
          nullable: true
        d3_frac:
          type: number
          format: double
          nullable: true
        d4_frac:
          type: number
          format: double
          nullable: true
        source_url:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
    DroughtUsdmResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DroughtUsdmPoint'
    DroughtVectorEventPoint:
      type: object
      required: [layer, event_id]
      properties:
        layer:
          type: string
        event_id:
          type: string
        region_type:
          type: string
          nullable: true
        region_id:
          type: string
          nullable: true
        region_name:
          type: string
          nullable: true
        parent_region_id:
          type: string
          nullable: true
        valid_start:
          type: string
          format: date-time
          nullable: true
        valid_end:
          type: string
          format: date-time
          nullable: true
        value:
          type: number
          format: double
          nullable: true
        unit:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        severity:
          type: string
          nullable: true
        source_url:
          type: string
          nullable: true
        geometry_wkt:
          type: string
          nullable: true
        properties:
          type: object
          additionalProperties: true
          nullable: true
    DroughtVectorResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DroughtVectorEventPoint'
    DroughtDimensions:
      type: object
      properties:
        datasets:
          type: array
          items:
            type: string
        indices:
          type: array
          items:
            type: string
        timescales:
          type: array
          items:
            type: string
        layers:
          type: array
          items:
            type: string
        region_types:
          type: array
          items:
            type: string
    DroughtDimensionsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/DroughtDimensions'
    DroughtInfoResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: object
          additionalProperties: true
    DimensionsData:
      type: object
      properties:
        asset_class:
          type: array
          items:
            type: string
        iso:
          type: array
          items:
            type: string
        location:
          type: array
          items:
            type: string
        market:
          type: array
          items:
            type: string
        product:
          type: array
          items:
            type: string
        block:
          type: array
          items:
            type: string
        tenor_type:
          type: array
          items:
            type: string
    DimensionsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/DimensionsData'
        counts:
          $ref: '#/components/schemas/DimensionsCountData'
          nullable: true
    DimensionCount:
      type: object
      required: [value, count]
      properties:
        value:
          type: string
        count:
          type: integer
    DimensionsCountData:
      type: object
      properties:
        asset_class:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
        iso:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
        location:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
        market:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
        product:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
        block:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
        tenor_type:
          type: array
          items:
            $ref: '#/components/schemas/DimensionCount'
    IsoLocationOut:
      type: object
      required: [iso, location_id]
      properties:
        iso:
          type: string
        location_id:
          type: string
        location_name:
          type: string
          nullable: true
        location_type:
          type: string
          nullable: true
        zone:
          type: string
          nullable: true
        hub:
          type: string
          nullable: true
        timezone:
          type: string
          nullable: true
    IsoLocationsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/IsoLocationOut'
    IsoLocationResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/IsoLocationOut'
    UnitsCanonical:
      type: object
      required: [currencies, units]
      properties:
        currencies:
          type: array
          items:
            type: string
        units:
          type: array
          items:
            type: string
    UnitsCanonicalResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/UnitsCanonical'
    UnitMappingOut:
      type: object
      required: [units_raw]
      properties:
        units_raw:
          type: string
        currency:
          type: string
          nullable: true
        per_unit:
          type: string
          nullable: true
    UnitsMappingResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitMappingOut'
    CalendarOut:
      type: object
      required: [name, timezone]
      properties:
        name:
          type: string
        timezone:
          type: string
    CalendarsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CalendarOut'
    CalendarBlocksResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            type: string
    CalendarHoursResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            type: string
            format: date-time
    CreateScenarioRequest:
      type: object
      required: [tenant_id, name, assumptions]
      properties:
        tenant_id:
          type: string
        name:
          type: string
        description:
          type: string
        assumptions:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioAssumption'
    ScenarioAssumption:
      type: object
      required: [driver_type, payload]
      properties:
        driver_type:
          type: string
        payload:
          type: object
        version:
          type: string
    ScenarioResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: object
          properties:
            scenario_id:
              type: string
            tenant_id:
              type: string
            name:
              type: string
            description:
              type: string
            status:
              type: string
            assumptions:
              type: array
              items:
                $ref: '#/components/schemas/ScenarioAssumption'
            created_at:
              type: string
              format: date-time
    ScenarioRunOptions:
      type: object
      properties:
        code_version:
          type: string
        seed:
          type: integer
    ScenarioRunResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: object
          properties:
            run_id:
              type: string
            scenario_id:
              type: string
            state:
              type: string
            code_version:
              type: string
            seed:
              type: integer
            created_at:
              type: string
              format: date-time
    ScenarioListResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioResponse/properties/data'
    ScenarioRunListResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioRunResponse/properties/data'
    ScenarioOutputPoint:
      type: object
      required: [scenario_id, curve_key, metric]
      properties:
        scenario_id:
          type: string
        run_id:
          type: string
          nullable: true
        asof_date:
          type: string
          format: date
          nullable: true
        curve_key:
          type: string
        tenor_type:
          type: string
          nullable: true
        contract_month:
          type: string
          format: date
          nullable: true
        tenor_label:
          type: string
          nullable: true
        metric:
          type: string
        value:
          type: number
          nullable: true
        band_lower:
          type: number
          nullable: true
        band_upper:
          type: number
          nullable: true
        attribution:
          type: object
          additionalProperties:
            type: number
          nullable: true
        version_hash:
          type: string
          nullable: true
    ScenarioOutputResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioOutputPoint'
    ScenarioMetricLatest:
      type: object
      required: [scenario_id, metric]
      properties:
        scenario_id:
          type: string
        metric:
          type: string
        curve_key:
          type: string
          nullable: true
        tenor_label:
          type: string
          nullable: true
        latest_value:
          type: number
          nullable: true
        latest_band_lower:
          type: number
          nullable: true
        latest_band_upper:
          type: number
          nullable: true
        latest_asof_date:
          type: string
          format: date
          nullable: true
    ScenarioMetricLatestResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ScenarioMetricLatest'
    PpaValuationRequest:
      type: object
      required: [ppa_contract_id]
      properties:
        ppa_contract_id:
          type: string
        scenario_id:
          type: string
          description: Scenario identifier to value; required when calling the API.
        asof_date:
          type: string
          format: date
        options:
          type: object
    PpaValuationResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PpaMetric'
    PpaContractCreate:
      type: object
      properties:
        instrument_id:
          type: string
          nullable: true
        terms:
          type: object
          additionalProperties: {}
    PpaContractUpdate:
      type: object
      properties:
        instrument_id:
          type: string
          nullable: true
        terms:
          type: object
          additionalProperties: {}
    PpaContract:
      type: object
      properties:
        ppa_contract_id:
          type: string
        tenant_id:
          type: string
        instrument_id:
          type: string
          nullable: true
        terms:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PpaContractResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/PpaContract'
    PpaContractListResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PpaContract'
    PpaValuationRecord:
      type: object
      properties:
        asof_date:
          type: string
          format: date
          nullable: true
        scenario_id:
          type: string
          nullable: true
        period_start:
          type: string
          format: date
          nullable: true
        period_end:
          type: string
          format: date
          nullable: true
        metric:
          type: string
          nullable: true
        value:
          type: number
          nullable: true
        cashflow:
          type: number
          nullable: true
        npv:
          type: number
          nullable: true
        irr:
          type: number
          nullable: true
        curve_key:
          type: string
          nullable: true
        version_hash:
          type: string
          nullable: true
        ingested_at:
          type: string
          format: date-time
          nullable: true
    PpaValuationListResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PpaValuationRecord'
    PpaMetric:
      type: object
      properties:
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        metric:
          type: string
        value:
          type: number
        currency:
          type: string
        unit:
          type: string
        run_id:
          type: string
        curve_key:
          type: string
        tenor_type:
          type: string
    EiaDatasetBriefOut:
      type: object
      required: [path]
      properties:
        path:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        default_frequency:
          type: string
          nullable: true
        start_period:
          type: string
          nullable: true
        end_period:
          type: string
          nullable: true
    EiaDatasetsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/EiaDatasetBriefOut'
    EiaDatasetDetailOut:
      type: object
      required: [path, frequencies, facets, data_columns]
      properties:
        path:
          type: string
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        frequencies:
          type: array
          items:
            type: object
            additionalProperties: true
        facets:
          type: array
          items:
            type: object
            additionalProperties: true
        data_columns:
          type: array
          items:
            type: string
        start_period:
          type: string
          nullable: true
        end_period:
          type: string
          nullable: true
        default_frequency:
          type: string
          nullable: true
        default_date_format:
          type: string
          nullable: true
    EiaDatasetResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/EiaDatasetDetailOut'
    EiaSeriesPoint:
      type: object
      required: [series_id, period, period_start]
      properties:
        series_id:
          type: string
        period:
          type: string
        period_start:
          type: string
          format: date-time
        period_end:
          type: string
          format: date-time
          nullable: true
        frequency:
          type: string
          nullable: true
        value:
          type: number
          nullable: true
        raw_value:
          type: string
          nullable: true
        unit:
          type: string
          nullable: true
        area:
          type: string
          nullable: true
        sector:
          type: string
          nullable: true
        seasonal_adjustment:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        dataset:
          type: string
          nullable: true
        metadata:
          type: object
          additionalProperties:
            type: string
          nullable: true
        ingest_ts:
          type: string
          format: date-time
          nullable: true
    EiaSeriesResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/EiaSeriesPoint'
    EiaSeriesDimensionsData:
      type: object
      properties:
        dataset:
          type: array
          items:
            type: string
        area:
          type: array
          items:
            type: string
        sector:
          type: array
          items:
            type: string
        unit:
          type: array
          items:
            type: string
        frequency:
          type: array
          items:
            type: string
        source:
          type: array
          items:
            type: string
    EiaSeriesDimensionsResponse:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          $ref: '#/components/schemas/EiaSeriesDimensionsData'
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
