apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: aurum-dev
  labels:
    app: grafana
    grafana_datasource: "1"
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - uid: clickhouse
        name: ClickHouse
        type: grafana-clickhouse-datasource
        access: proxy
        url: http://clickhouse.aurum-dev.svc.cluster.local:8123
        isDefault: true
        jsonData:
          defaultDatabase: ops
          username: default
          tlsSkipVerify: true
        secureJsonData:
          password: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: aurum-dev
  labels:
    app: grafana
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: Aurum
        folder: Aurum
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-defs
  namespace: aurum-dev
  labels:
    app: grafana
data:
  aurum-observability.json: |
    {
      "id": null,
      "uid": "aurum-observability",
      "title": "Aurum Observability",
      "timezone": "",
      "schemaVersion": 39,
      "version": 1,
      "refresh": "30s",
      "panels": [
        {
          "type": "timeseries",
          "title": "API Requests per Minute",
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "targets": [
            {
              "query": "SELECT toStartOfInterval(timestamp, toIntervalMinute(1)) AS minute, count(*) AS requests FROM ops.logs WHERE JSONExtractString(message, 'event') = 'access' GROUP BY minute ORDER BY minute",
              "refId": "A",
              "format": "time_series"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "unit": "req/min"
            },
            "overrides": []
          },
          "options": {
            "legend": {
              "displayMode": "table",
              "placement": "bottom"
            },
            "tooltip": {
              "mode": "single"
            }
          },
          "gridPos": {
            "h": 9,
            "w": 24,
            "x": 0,
            "y": 0
          }
        },
        {
          "type": "table",
          "title": "Scenario Worker Recent Logs",
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "targets": [
            {
              "query": "SELECT timestamp, message FROM ops.logs WHERE JSONExtractString(message, 'logger') = 'aurum.scenarios.worker' ORDER BY timestamp DESC LIMIT 50",
              "refId": "B",
              "format": "table"
            }
          ],
          "options": {
            "showHeader": true
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "left"
              }
            },
            "overrides": []
          }
        }
      ],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: aurum-dev
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.4.3
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aurum-secrets
                  key: MINIO_ROOT_PASSWORD
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_INSTALL_PLUGINS
              value: grafana-clickhouse-datasource
          ports:
            - containerPort: 3000
              name: http
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboard-defs
              mountPath: /var/lib/grafana/dashboards
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: dashboard-defs
          configMap:
            name: grafana-dashboard-defs
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: aurum-dev
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000
