apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: aurum-dev
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          # Replace with your built image for the API service
          image: ghcr.io/aurum/api:0.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: AURUM_API_TRINO_HOST
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: AURUM_API_TRINO_HOST
            - name: AURUM_API_TRINO_PORT
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: AURUM_API_TRINO_PORT
            - name: AURUM_API_TRINO_USER
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: AURUM_API_TRINO_USER
            - name: AURUM_API_TRINO_SCHEME
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: AURUM_API_TRINO_SCHEME
            - name: AURUM_API_REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: AURUM_API_REDIS_URL
            - name: AURUM_API_CACHE_TTL
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: AURUM_API_CACHE_TTL
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
      # Prometheus scrape annotations for metrics
      # These are pod annotations; adjust to your Prometheus operator setup as needed
      # If you use ServiceMonitor, you can instead define it in a separate manifest
      # and omit these annotations.
      #
      # metadata:
      #   annotations:
      #     prometheus.io/scrape: "true"
      #     prometheus.io/port: "8080"
      #     prometheus.io/path: "/metrics"
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: aurum-dev
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: api
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: aurum-api
  namespace: aurum-dev
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`api.aurum.localtest.me`)
      kind: Rule
      services:
        - name: api
          port: 8080
