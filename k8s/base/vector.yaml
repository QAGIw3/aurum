apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config
  namespace: aurum-dev
data:
  vector.toml: |
    # Vector configuration shipping Kubernetes logs to ClickHouse.
    
    [sources.kubernetes_logs]
      type = "kubernetes_logs"
      extra_fields = ["pod", "namespace", "container", "node"]
      scrape_interval_secs = 10
    
    [transforms.parse_json]
      type = "remap"
      inputs = ["kubernetes_logs"]
      source = """
      parsed, err = parse_json(.message)
      if err == null {
        . = merge(., parsed)
      }
      """
    
    [sinks.clickhouse]
      type = "clickhouse"
      inputs = ["parse_json"]
      endpoint = "http://clickhouse:8123"
      database = "ops"
      table = "logs"
      compression = "gzip"
      auth.username = "default"
      skip_unknown_fields = true
      strategy = "insert"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  namespace: aurum-dev
  labels:
    app: vector
spec:
  selector:
    matchLabels:
      app: vector
  template:
    metadata:
      labels:
        app: vector
    spec:
      serviceAccountName: vector
      tolerations:
        - operator: "Exists"
      volumes:
        - name: config
          configMap:
            name: vector-config
      containers:
        - name: vector
          image: timberio/vector:0.33.0-alpine
          args: ["--config", "/etc/vector/vector.toml"]
          volumeMounts:
            - name: config
              mountPath: /etc/vector/vector.toml
              subPath: vector.toml
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          readinessProbe:
            exec:
              command: ["vector", "validate", "/etc/vector/vector.toml"]
            initialDelaySeconds: 10
            periodSeconds: 30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: aurum-dev
