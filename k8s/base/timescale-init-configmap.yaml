apiVersion: v1
kind: ConfigMap
metadata:
  name: timescale-init-sql
  namespace: aurum-dev
data:
  ddl_timeseries.sql: |
    CREATE EXTENSION IF NOT EXISTS timescaledb;
    CREATE EXTENSION IF NOT EXISTS pgcrypto;
    
    CREATE TABLE IF NOT EXISTS public.iso_lmp_timeseries (
        record_hash TEXT PRIMARY KEY,
        tenant_id UUID,
        iso_code TEXT NOT NULL,
        market TEXT NOT NULL,
        delivery_date DATE NOT NULL,
        interval_start TIMESTAMPTZ NOT NULL,
        interval_end TIMESTAMPTZ,
        interval_minutes INTEGER,
        location_id TEXT NOT NULL,
        location_name TEXT,
        location_type TEXT,
        price_total DOUBLE PRECISION NOT NULL,
        price_energy DOUBLE PRECISION,
        price_congestion DOUBLE PRECISION,
        price_loss DOUBLE PRECISION,
        currency TEXT DEFAULT 'USD',
        uom TEXT DEFAULT 'MWh',
        settlement_point TEXT,
        source_run_id TEXT,
        metadata JSONB,
        ingest_ts TIMESTAMPTZ NOT NULL DEFAULT NOW()
    );
    
    SELECT create_hypertable('public.iso_lmp_timeseries', 'interval_start', if_not_exists => TRUE, migrate_data => TRUE);
    CREATE INDEX IF NOT EXISTS idx_iso_lmp_lookup ON public.iso_lmp_timeseries(iso_code, location_id, market, interval_start DESC);
    
    CREATE TABLE IF NOT EXISTS public.load_timeseries (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        tenant_id UUID,
        region TEXT NOT NULL,
        ts TIMESTAMPTZ NOT NULL,
        value DOUBLE PRECISION NOT NULL,
        units TEXT DEFAULT 'MW',
        created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
    );
    
    SELECT create_hypertable('public.load_timeseries', 'ts', if_not_exists => TRUE, migrate_data => TRUE);
    CREATE INDEX IF NOT EXISTS idx_load_region_ts ON public.load_timeseries(region, ts DESC);
    
    CREATE TABLE IF NOT EXISTS public.ops_metrics (
        id BIGSERIAL PRIMARY KEY,
        metric TEXT NOT NULL,
        labels JSONB DEFAULT '{}'::JSONB,
        ts TIMESTAMPTZ NOT NULL,
        value DOUBLE PRECISION NOT NULL,
        created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
    );
    
    SELECT create_hypertable('public.ops_metrics', 'ts', if_not_exists => TRUE, migrate_data => TRUE);
    CREATE INDEX IF NOT EXISTS idx_ops_metrics_metric_ts ON public.ops_metrics(metric, ts DESC);
