# Aurum development stack defaults

# Object storage / MinIO
AURUM_S3_ENDPOINT=http://minio:9000
AURUM_S3_REGION=us-east-1
AURUM_S3_ACCESS_KEY=minio
AURUM_S3_SECRET_KEY=minio123
AURUM_S3_BUCKET=aurum

# lakeFS configuration (server bootstrap)
# Used by the lakeFS container and bootstrap script to create the repo and authenticate.
LAKEFS_SECRET_KEY=changemechangemechangeme123456
LAKEFS_ROOT_USER=lakefs
LAKEFS_ROOT_PASSWORD=lakefs123
LAKEFS_REPO=aurum
LAKEFS_STORAGE_NAMESPACE=s3://aurum/curated/iceberg
LAKEFS_API_ENDPOINT=http://lakefs:8000/api/v1

# Postgres (operational + shared services)
POSTGRES_USER=aurum
POSTGRES_PASSWORD=aurum

# Timescale (separate container)
TIMESCALE_USER=timescale
TIMESCALE_PASSWORD=timescale

# Airflow database connection (defaults to Postgres credentials)
AIRFLOW_DB_USER=aurum
AIRFLOW_DB_PASSWORD=aurum

# Airflow security
AIRFLOW_FERNET_KEY=PLEASE_GENERATE_A_FERNET_KEY
AIRFLOW_ADMIN_USER=admin
AIRFLOW_ADMIN_PASSWORD=admin
AIRFLOW_ADMIN_EMAIL=admin@example.com

# Superset optional UI profile
SUPERSET_SECRET_KEY=please-change-me

# Nessie bootstrap
NESSIE_API_ENDPOINT=http://nessie:19121/api/v1
NESSIE_NAMESPACES=market,ops,lineage

# Kafka & Schema Registry
KAFKA_BOOTSTRAP_SERVERS=broker:29092
SCHEMA_REGISTRY_URL=http://schema-registry:8081
SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO=
AURUM_DLQ_TOPIC=aurum.curve.observation.dlq
AURUM_QUARANTINE_DIR=./artifacts/quarantine
AURUM_WRITE_DLQ_JSON=1

# Vault (secrets management)
VAULT_ADDR=http://vault:8200
VAULT_TOKEN=
AURUM_PYTHONPATH_ENTRY=/opt/airflow/src

# External data source credentials (set in your local env or Vault)
# Leave blank or set placeholders; do not commit real secrets.
NOAA_GHCND_TOKEN=
EIA_API_KEY=
FRED_API_KEY=
PJM_API_KEY=
CAISO_API_KEY=
AESO_API_KEY=
ERCOT_API_USERNAME=
ERCOT_API_PASSWORD=
ISONE_WS_USERNAME=
ISONE_WS_PASSWORD=
SPP_API_TOKEN=

# MISO ingestion (Data Broker + Market Reports)
AURUM_MISO_DA_URL=
AURUM_MISO_RT_URL=
AURUM_MISO_LOAD_ENDPOINT=
AURUM_MISO_GENMIX_ENDPOINT=
AURUM_MISO_LOAD_TOPIC=aurum.iso.miso.load.v1
AURUM_MISO_GENMIX_TOPIC=aurum.iso.miso.genmix.v1
AURUM_MISO_LMP_TOPIC=aurum.iso.miso.lmp.v1
AURUM_MISO_RTDB_BASE=https://api.misoenergy.org
AURUM_MISO_RTDB_ENDPOINT=/MISORTDBService/rest/data/getLMPConsolidatedTable
AURUM_MISO_RTDB_MARKET=RTM
AURUM_MISO_RTDB_REGION=ALL
AURUM_MISO_RTDB_HEADERS=
# Provide headers as 'Name:Value' entries separated by '||', e.g. "Ocp-Apim-Subscription-Key:abc123"
AURUM_MISO_RTDB_INTERVAL_SECONDS=300

# Optional overrides can be added below

# lakeFS client (SDKs, Airflow hooks)
# These are read by code (aurum.lakefs_client) and DAGs when making API calls to lakeFS.
AURUM_LAKEFS_ENDPOINT=http://lakefs:8000/api/v1
AURUM_LAKEFS_ACCESS_KEY=lakefs
AURUM_LAKEFS_SECRET_KEY=lakefs123
AURUM_LAKEFS_REPO=aurum
AURUM_LAKEFS_SOURCE_BRANCH=main
AURUM_LAKEFS_BRANCH=
AURUM_LAKEFS_COMMIT=0
AURUM_LAKEFS_TAG=

# Nessie / Iceberg
AURUM_NESSIE_URI=http://nessie:19121/api/v1
AURUM_S3_WAREHOUSE=s3://aurum/curated/iceberg
AURUM_WRITE_ICEBERG=0

# API service
AURUM_API_TRINO_HOST=trino
AURUM_API_TRINO_PORT=8080
AURUM_API_TRINO_USER=aurum
AURUM_API_TRINO_SCHEME=http
# Optional Redis caching (set to e.g. redis://redis:6379/0)
AURUM_API_REDIS_URL=
AURUM_API_CACHE_TTL=60
# Rate limiting (per-client)
AURUM_API_RATE_LIMIT_RPS=10
AURUM_API_RATE_LIMIT_BURST=20
# CORS (comma-separated origins, * for all)
AURUM_API_CORS_ORIGINS=
# In-memory cache TTL (seconds) for metadata endpoints
AURUM_API_INMEMORY_TTL=60
# GZip compression threshold (bytes)
AURUM_API_GZIP_MIN_BYTES=500
# Scenario outputs endpoint (feature flag)
AURUM_API_SCENARIO_OUTPUTS_ENABLED=0

# OIDC/JWT (optional; disabled by default)
AURUM_API_AUTH_DISABLED=1
AURUM_API_OIDC_ISSUER=
AURUM_API_OIDC_AUDIENCE=
AURUM_API_OIDC_JWKS_URL=
AURUM_API_JWT_LEEWAY=60
# OAuth2 Proxy (Traefik forward-auth)
OAUTH2_PROXY_PROVIDER=oidc
OAUTH2_PROXY_ISSUER_URL=
OAUTH2_PROXY_CLIENT_ID=
OAUTH2_PROXY_CLIENT_SECRET=
OAUTH2_PROXY_REDIRECT_URL=http://api.aurum.localhost/oauth2/callback
OAUTH2_PROXY_COOKIE_SECRET=please-set-a-32-byte-base64-secret
OAUTH2_PROXY_EMAIL_DOMAINS=*
