apiVersion: v1
kind: Service
metadata:
  name: timescale
  namespace: aurum-dev
  labels:
    app: timescale
spec:
  type: NodePort
  selector:
    app: timescale
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      nodePort: 30433
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timescale
  namespace: aurum-dev
spec:
  serviceName: timescale
  replicas: 1
  selector:
    matchLabels:
      app: timescale
  template:
    metadata:
      labels:
        app: timescale
    spec:
      containers:
        - name: timescaledb
          image: timescale/timescaledb:latest-pg15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: aurum-config
                  key: TIMESCALE_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: aurum-secrets
                  key: TIMESCALE_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aurum-secrets
                  key: TIMESCALE_PASSWORD
          readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "pg_isready -U \"$POSTGRES_USER\""]
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-sql
          configMap:
            name: timescale-init-sql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: aurum-local
        resources:
          requests:
            storage: 20Gi
