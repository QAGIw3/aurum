# NYISO day-ahead LBMP â†’ Kafka (Avro)
# Required environment variables:
#   NYISO_URL                - HTTP endpoint returning CSV data
#   KAFKA_BOOTSTRAP_SERVERS  - Kafka brokers
#   SCHEMA_REGISTRY_URL      - Schema Registry endpoint
#   NYISO_TOPIC              - Kafka topic (default aurum.iso.nyiso.lmp.v1)
# Optional environment variables:
#   NYISO_SUBJECT            - Schema Registry subject (default <topic>-value)
#   ISO_LMP_SCHEMA           - Avro schema JSON populated by run_job.sh
#   ISO_LOCATION_REGISTRY    - Path to iso_nodes.csv (default config/iso_nodes.csv)

env {
  job.mode = "BATCH"
  parallelism = 1
}

source {
  Http {
    url = "${NYISO_URL}"
    method = "GET"
    connection_timeout_ms = 20000
    retry = 10
    format = "csv"
    csv {
      delimiter = ","
      header = true
    }
    result_table_name = "nyiso_raw"
  }
  LocalFile {
    path = "${ISO_LOCATION_REGISTRY}"
    format = "csv"
    csv {
      delimiter = ","
      header = true
    }
    schema {
      fields {
        iso = string
        location_id = string
        location_name = string
        location_type = string
        zone = string
        hub = string
        timezone = string
      }
    }
    result_table_name = "iso_registry"
  }
}

transform {
  Sql {
    source_table_name = "nyiso_raw"
    result_table_name = "nyiso_normalized"
    query = """
      SELECT
        'NYISO'                                                AS iso_code,
        COALESCE(n.market_name, 'DAY_AHEAD')                   AS market,
        DATEDIFF(TO_DATE(n.time_stamp), TO_DATE('1970-01-01')) AS delivery_date,
        CAST(UNIX_TIMESTAMP(n.time_stamp) * 1000000 AS BIGINT) AS interval_start,
        CAST(UNIX_TIMESTAMP(n.time_stamp) * 1000000 + 3600000000 AS BIGINT) AS interval_end,
        60                                                     AS interval_minutes,
        n.ptid                                                 AS location_id,
        COALESCE(reg.location_name, n.name)                    AS location_name,
        COALESCE(reg.location_type, 'NODE')                    AS location_type,
        reg.zone                                               AS zone,
        reg.hub                                                AS hub,
        reg.timezone                                           AS timezone,
        CAST(n."LBMP ($$/MWh)" AS DOUBLE)                     AS price_total,
        CAST(n."Marginal Cost Congestion" AS DOUBLE)          AS price_congestion,
        CAST(n."Marginal Cost Loss" AS DOUBLE)                AS price_loss,
        CAST(n."Marginal Cost Components" AS DOUBLE)          AS price_energy,
        'USD'                                                  AS currency,
        'MWh'                                                  AS uom,
        n.name                                                 AS settlement_point,
        NULL                                                   AS source_run_id,
        CAST(UNIX_TIMESTAMP() * 1000000 AS BIGINT)             AS ingest_ts,
        SHA2(CONCAT_WS('|', n.time_stamp, n.ptid, n."LBMP ($$/MWh)"), 256) AS record_hash,
        NULL                                                   AS metadata
      FROM nyiso_raw n
      LEFT JOIN iso_registry reg
        ON upper(reg.iso) = 'NYISO'
       AND upper(reg.location_id) = upper(CAST(n.ptid AS STRING))
    """
  }
}

sink {
  Kafka {
    plugin_input = "nyiso_normalized"
    bootstrap.servers = "${KAFKA_BOOTSTRAP_SERVERS}"
    topic = "${NYISO_TOPIC}"
    semantic = "AT_LEAST_ONCE"
    format = "avro"
    avro {
      use.schema.registry = true
      schema.registry.url = "${SCHEMA_REGISTRY_URL}"
      value.schema.subject = "${NYISO_SUBJECT}"
      value.schema = """${ISO_LMP_SCHEMA}"""
    }
    producer {
      linger.ms = 500
      batch.size = 32768
      retries = 5
    }
  }
}
