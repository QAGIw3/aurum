# AESO generation mix â†’ Kafka (Avro)

env {
  job.mode = "BATCH"
  parallelism = 1
}

source {
  Http {
    url = "dry_run_default"
    method = "GET"
    headers {
      X-API-Key = "dry_run_default"
    }
    params {
      startTime = "dry_run_default"
      endTime = "dry_run_default"
      dry_run_default = "dry_run_default"
    }
    connection_timeout_ms = 20000
    retry = 12
    format = "json"
    schema = { fields { dry_run_default = string dry_run_default = string dry_run_default = string } }
    jsonpath = "dry_run_default"
    result_table_name = "aeso_genmix_raw"
  }
}

transform {
  Sql {
    source_table_name = "aeso_genmix_raw"
    result_table_name = "aeso_genmix_normalized"
    query = """
      SELECT
        'AESO' AS iso_code,
        CAST(UNIX_TIMESTAMP(dry_run_default, 'dry_run_default') * 1000000 AS BIGINT) AS asof_time,
        TRIM(UPPER(CAST(dry_run_default AS STRING))) AS fuel_type,
        CAST(dry_run_default AS DOUBLE) AS mw,
        'dry_run_default' AS unit,
        CAST(UNIX_TIMESTAMP() * 1000000 AS BIGINT) AS ingest_ts,
        NULL AS metadata
      FROM aeso_genmix_raw
    """
  }
}

sink {
  Kafka {
    plugin_input = "aeso_genmix_normalized"
    bootstrap.servers = "localhost:9092"
    topic = "dry_run_default"
    semantic = "AT_LEAST_ONCE"
    format = "avro"
    avro {
      use.schema.registry = true
      schema.registry.url = "http://localhost:8081"
      value.schema.subject = "dry_run_default"
      value.schema = """{"type":"record","name":"IsoGenmixRecord","namespace":"aurum.iso","fields":[{"name":"iso_code","type":"string"}]}"""
    }
  }
}

