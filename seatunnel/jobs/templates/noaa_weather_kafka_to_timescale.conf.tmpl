# NOAA weather topic â†’ TimescaleDB (JDBC)
#
# Required environment variables:
#   AURUM_KAFKA_BOOTSTRAP_SERVERS  - Kafka brokers
#   AURUM_SCHEMA_REGISTRY_URL      - Schema Registry endpoint
#   AURUM_TIMESCALE_JDBC_URL       - JDBC URL for TimescaleDB (e.g. jdbc:postgresql://timescale:5432/timeseries)
#   AURUM_TIMESCALE_USER           - Timescale username
#   AURUM_TIMESCALE_PASSWORD       - Timescale password
#
# Optional environment variables:
#   NOAA_TOPIC_PATTERN       - Regex pattern for topics (default aurum\\.ref\\.noaa\\.weather\\.v1)
#   NOAA_TABLE               - Timescale table (default noaa_weather_timeseries)
#   NOAA_SAVE_MODE           - Save mode (append)

env {
  job.mode = "STREAMING"
  checkpoint.interval = 60000
}

source {
  Kafka {
    bootstrap.servers = "${AURUM_KAFKA_BOOTSTRAP_SERVERS}"
    pattern = "${NOAA_TOPIC_PATTERN}"
    format = "avro"
    start_mode = "latest"
    avro {
      schema.registry.url = "${AURUM_SCHEMA_REGISTRY_URL}"
    }
    result_table_name = "noaa_raw"
  }
}

transform {
  Sql {
    source_table_name = "noaa_raw"
    result_table_name = "noaa_enriched"
    query = """
      SELECT
        station_id,
        station_name,
        latitude,
        longitude,
        elevation_m,
        dataset,
        (DATE '1970-01-01' + date * INTERVAL '1 day') AS observation_date,
        element,
        value,
        raw_value,
        unit,
        CASE WHEN observation_time IS NOT NULL THEN TO_TIMESTAMP(observation_time / 1000000.0) ELSE NULL END AS observation_time,
        measurement_flag,
        quality_flag,
        source_flag,
        CASE WHEN attributes IS NULL THEN NULL ELSE CAST(attributes AS STRING) END AS attributes,
        TO_TIMESTAMP(ingest_ts / 1000000.0) AS ingest_ts
      FROM noaa_raw
    """
  }
}

sink {
  Jdbc {
    driver = "org.postgresql.Driver"
    url = "${AURUM_TIMESCALE_JDBC_URL}"
    user = "${AURUM_TIMESCALE_USER}"
    password = "${AURUM_TIMESCALE_PASSWORD}"
    table = "${NOAA_TABLE}"
    primary_keys = ["station_id", "observation_date", "element"]
    save_mode = "${NOAA_SAVE_MODE}"
    connection_check_timeout_sec = 30
  }
}

