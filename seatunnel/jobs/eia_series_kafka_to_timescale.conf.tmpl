# EIA series topics â†’ TimescaleDB (JDBC)
#
# Required environment variables:
#   KAFKA_BOOTSTRAP_SERVERS  - Kafka brokers
#   SCHEMA_REGISTRY_URL      - Schema Registry endpoint
#   TIMESCALE_JDBC_URL       - JDBC URL for TimescaleDB (e.g. jdbc:postgresql://timescale:5432/timeseries)
#   TIMESCALE_USER           - Timescale username
#   TIMESCALE_PASSWORD       - Timescale password
#
# Optional environment variables:
#   EIA_TOPIC_PATTERN        - Regex pattern for topics (default aurum\.ref\.eia\..*\.v1)
#   EIA_SERIES_TABLE         - Timescale table (default eia_series_timeseries)
#   EIA_SERIES_SAVE_MODE     - Save mode (append)

env {
  job.mode = "STREAMING"
  checkpoint.interval = 60000
}

source {
  Kafka {
    bootstrap.servers = "${KAFKA_BOOTSTRAP_SERVERS}"
    pattern = "${EIA_TOPIC_PATTERN}"
    format = "avro"
    start_mode = "latest"
    avro {
      schema.registry.url = "${SCHEMA_REGISTRY_URL}"
    }
    result_table_name = "eia_raw"
  }
}

transform {
  Sql {
    source_table_name = "eia_raw"
    result_table_name = "eia_enriched"
    query = """
      SELECT
        series_id,
        period,
        CASE WHEN period_start IS NOT NULL THEN TO_TIMESTAMP(period_start / 1000000.0) ELSE NULL END AS period_start,
        CASE WHEN period_end IS NOT NULL THEN TO_TIMESTAMP(period_end / 1000000.0) ELSE NULL END AS period_end,
        frequency,
        value,
        raw_value,
        unit,
        area,
        sector,
        seasonal_adjustment,
        description,
        source,
        dataset,
        CASE WHEN metadata IS NULL THEN NULL ELSE CAST(metadata AS STRING) END AS metadata,
        TO_TIMESTAMP(ingest_ts / 1000000.0) AS ingest_ts
      FROM eia_raw
    """
  }
}

sink {
  Jdbc {
    plugin_input = "eia_enriched"
    driver = "org.postgresql.Driver"
    url = "${TIMESCALE_JDBC_URL}"
    user = "${TIMESCALE_USER}"
    password = "${TIMESCALE_PASSWORD}"
    table = "${EIA_SERIES_TABLE}"
    primary_keys = ["series_id", "period"]
    save_mode = "${EIA_SERIES_SAVE_MODE}"
    connection_check_timeout_sec = 30
  }
}
