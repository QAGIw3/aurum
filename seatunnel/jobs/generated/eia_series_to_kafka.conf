# EIA v2 series observations â†’ Kafka (Avro)
#
# Required environment variables (set via scripts/seatunnel/run_job.sh):
#   EIA_API_KEY             - EIA API key
#   EIA_API_BASE_URL        - Base URL for EIA v2 API (default https://api.eia.gov/v2)
#   EIA_SERIES_PATH         - Dataset path (e.g. electricity/wholesale/prices/data)
#   EIA_SERIES_ID           - Series identifier stored in the record
#   EIA_FREQUENCY           - Value for the Avro frequency enum (ANNUAL, MONTHLY, etc.)
#   EIA_TOPIC               - Kafka topic to emit to
#   KAFKA_BOOTSTRAP_SERVERS - Kafka brokers
#   SCHEMA_REGISTRY_URL     - Confluent Schema Registry endpoint
#
# Optional environment variables:
#   EIA_START               - Start period (YYYY-MM-DD or dataset-supported token)
#   EIA_END                 - End period
#   EIA_OFFSET              - Pagination offset
#   EIA_LIMIT               - Page size
#   EIA_SORT                - Column to sort by (default period)
#   EIA_DIRECTION           - ASC/DESC sort order
#   EIA_UNITS               - Units string stored in the Avro record
#   EIA_SEASONAL_ADJUSTMENT - Seasonal adjustment token (SA, NSA, UNKNOWN)
#   EIA_SOURCE              - Source string stored in the Avro record
#   EIA_DATASET             - Dataset name captured in the record
#   EIA_SUBJECT             - Schema Registry subject (default <topic>-value)

env {
  job.mode = "BATCH"
  parallelism = 1
}

source {
  Http {
    url = "https://api.eia.gov/v2/electricity/wholesale/prices/data"
    method = "GET"
    params {
      api_key = "QSMlajdD70EbxhRXVHYFioVebl0XmzUxAH5nZxeg"
      start = "2024-01-01"
      end = "2024-12-31"
      offset = 0
      length = 5000
      sort[0] = "period"
      direction[0] = "DESC"
    }
    connection_timeout_ms = 15000
    retry {
      interval_ms = 1000
      max_retries = 5
    }
    format = "json"
    json {
      json_path = "$.response.data[*]"
    }
    result_table_name = "eia_raw"
  }
}

transform {
  Sql {
    source_table_name = "eia_raw"
    result_table_name = "eia_normalized"
    query = """
      SELECT
        'EBA.ALL.D.H'                                         AS series_id,
        period                                                     AS period,
        CAST(NULL AS BIGINT)                                       AS period_start,
        CAST(NULL AS BIGINT)                                       AS period_end,
        'HOURLY'                                         AS frequency,
        CASE
          WHEN value IS NULL OR value = '' THEN NULL
          ELSE CAST(value AS DOUBLE)
        END                                                        AS value,
        CAST(value AS STRING)                                      AS raw_value,
        COALESCE(units, 'unknown')                            AS unit,
        CAST(NULL AS STRING)                                           AS area,
        CAST(NULL AS STRING)                                         AS sector,
        'UNKNOWN'                               AS seasonal_adjustment,
        CAST(NULL AS STRING)                                    AS description,
        COALESCE(source, 'EIA')                                         AS source,
        COALESCE(dataset, '')                                        AS dataset,
        NULL                                       AS metadata,
        CAST(UNIX_TIMESTAMP() * 1000000 AS BIGINT)                 AS ingest_ts
      FROM eia_raw
    """
  }
}

sink {
  Kafka {
    bootstrap.servers = "localhost:9092"
    topic = "aurum.ref.eia.series.v1"
    semantic = "AT_LEAST_ONCE"
    format = "avro"
    avro {
      use.schema.registry = true
      schema.registry.url = "http://localhost:8081"
      value.schema.subject = "aurum.ref.eia.series.v1-value"
      value.schema = """
        {
          "type": "record",
          "name": "EiaSeriesPoint",
          "namespace": "aurum.ref.eia",
          "fields": [
            {"name": "series_id", "type": "string"},
            {"name": "period", "type": "string"},
            {"name": "period_start", "type": ["null", {"type": "long", "logicalType": "timestamp-micros"}], "default": null},
            {"name": "period_end", "type": ["null", {"type": "long", "logicalType": "timestamp-micros"}], "default": null},
            {
              "name": "frequency",
              "type": {
                "type": "enum",
                "name": "EiaFrequency",
                "symbols": ["ANNUAL", "QUARTERLY", "MONTHLY", "WEEKLY", "DAILY", "HOURLY", "OTHER"]
              },
              "default": "OTHER"
            },
            {"name": "value", "type": ["null", "double"], "default": null},
            {"name": "raw_value", "type": ["null", "string"], "default": null},
            {"name": "unit", "type": ["null", "string"], "default": null},
            {"name": "area", "type": ["null", "string"], "default": null},
            {"name": "sector", "type": ["null", "string"], "default": null},
            {"name": "seasonal_adjustment", "type": ["null", "string"], "default": null},
            {"name": "description", "type": ["null", "string"], "default": null},
            {"name": "source", "type": ["null", "string"], "default": null},
            {"name": "dataset", "type": ["null", "string"], "default": null},
            {"name": "metadata", "type": ["null", {"type": "map", "values": "string"}], "default": null},
            {"name": "ingest_ts", "type": {"type": "long", "logicalType": "timestamp-micros"}}
          ]
        }
      """
    }
    producer {
      linger.ms = 500
      batch.size = 32768
      retries = 5
    }
  }
}
