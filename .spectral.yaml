extends: ["spectral:oas"]

rules:
  # Custom Aurum API Rules

  # Tenant Context Rules
  tenant-context-required:
    description: "All v2 endpoints must require tenant_id parameter"
    message: "{{error}}"
    severity: error
    given: "$..paths[*][*]"
    then:
      - field: "parameters"
        function: "schema"
        functionOptions:
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: "string"
                  enum: ["tenant_id"]
                in:
                  type: "string"
                  enum: ["query"]
                required:
                  type: "boolean"
                  const: true
              required: ["name", "in", "required"]
            contains:
              type: "object"
              properties:
                name:
                  type: "string"
                  const: "tenant_id"

  # Pagination Rules
  cursor-pagination-required:
    description: "Collection endpoints must support cursor-based pagination"
    message: "{{error}}"
    severity: warn
    given: "$..paths[*][*]"
    then:
      - field: "parameters"
        function: "schema"
        functionOptions:
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: "string"
                  enum: ["cursor", "limit"]
                in:
                  type: "string"
                  enum: ["query"]
              required: ["name", "in"]

  # Error Response Rules
  error-responses-defined:
    description: "All operations must define appropriate error responses"
    message: "{{error}}"
    severity: error
    given: "$..paths[*][*]"
    then:
      - field: "responses"
        function: "schema"
        functionOptions:
          schema:
            type: "object"
            properties:
              "400":
                type: "object"
                description: "Bad Request"
              "401":
                type: "object"
                description: "Unauthorized"
              "403":
                type: "object"
                description: "Forbidden"
              "404":
                type: "object"
                description: "Not Found"
              "429":
                type: "object"
                description: "Too Many Requests"
              "500":
                type: "object"
                description: "Internal Server Error"
            required: ["400", "401", "403", "404", "429", "500"]

  # Rate Limit Headers Rule
  rate-limit-headers-present:
    description: "Rate limiting headers must be documented"
    message: "{{error}}"
    severity: warn
    given: "$..paths[*][*]"
    then:
      - field: "responses.429"
        function: "schema"
        functionOptions:
          schema:
            type: "object"
            properties:
              headers:
                type: "object"
                properties:
                  "X-RateLimit-Limit":
                    type: "object"
                  "X-RateLimit-Remaining":
                    type: "object"
                  "X-RateLimit-Reset":
                    type: "object"
                  "Retry-After":
                    type: "object"

  # ETag Support Rule
  etag-support-documented:
    description: "ETag support must be documented for GET operations"
    message: "{{error}}"
    severity: warn
    given: "$..paths[*].get"
    then:
      - field: "responses.200"
        function: "schema"
        functionOptions:
          schema:
            type: "object"
            properties:
              headers:
                type: "object"
                properties:
                  "ETag":
                    type: "object"

  # Link Headers Rule
  link-headers-documented:
    description: "Link headers must be documented for collection endpoints"
    message: "{{error}}"
    severity: warn
    given: "$..paths[*][*]"
    then:
      - field: "responses.200"
        function: "schema"
        functionOptions:
          schema:
            type: "object"
            properties:
              headers:
                type: "object"
                properties:
                  "Link":
                    type: "object"

  # Request ID Rule
  request-id-header:
    description: "All responses must include X-Request-Id header"
    message: "{{error}}"
    severity: warn
    given: "$..responses[*]"
    then:
      - field: "headers.X-Request-Id"
        function: "defined"

  # Tenant ID Validation Rule
  tenant-id-format:
    description: "Tenant ID must follow proper format"
    message: "{{error}}"
    severity: warn
    given: "$..parameters[*]"
    then:
      - field: "name"
        function: "pattern"
        functionOptions:
          pattern: "tenant_id"
      - field: "schema"
        function: "schema"
        functionOptions:
          schema:
            type: "object"
            properties:
              pattern:
                type: "string"
                pattern: "^[a-zA-Z0-9-_]+$"

  # API Version Rule
  api-version-header:
    description: "All responses must include X-API-Version header"
    message: "{{error}}"
    severity: warn
    given: "$..responses[*]"
    then:
      - field: "headers.X-API-Version"
        function: "defined"

  # Documentation Completeness Rules
  summary-required:
    description: "All operations must have a summary"
    message: "{{error}}"
    severity: error
    given: "$..paths[*][*]"
    then:
      - field: "summary"
        function: "defined"

  description-required:
    description: "All operations must have a description"
    message: "{{error}}"
    severity: warn
    given: "$..paths[*][*]"
    then:
      - field: "description"
        function: "defined"

  # Security Rules
  security-documented:
    description: "Security requirements must be documented"
    message: "{{error}}"
    severity: warn
    given: "$..paths[*][*]"
    then:
      - field: "security"
        function: "defined"

  # Response Schema Rules
  response-schema-defined:
    description: "All success responses must have schemas"
    message: "{{error}}"
    severity: error
    given: "$..responses[?(@property.match(/^[2-3][0-9][0-9]$/))]"
    then:
      - field: "content"
        function: "defined"

  # Parameter Documentation Rules
  parameter-description-required:
    description: "All parameters must have descriptions"
    message: "{{error}}"
    severity: error
    given: "$..parameters[*]"
    then:
      - field: "description"
        function: "defined"

  # Example Rules
  response-examples-required:
    description: "Important endpoints should have response examples"
    message: "{{error}}"
    severity: warn
    given: "$..responses[?(@property.match(/^[2-3][0-9][0-9]$/))]"
    then:
      - field: "content.*.schema.example"
        function: "defined"

  request-examples-required:
    description: "POST/PUT operations should have request examples"
    message: "{{error}}"
    severity: warn
    given: "$..requestBody"
    then:
      - field: "content.*.schema.example"
        function: "defined"