{
  "openapi": "3.1.0",
  "info": {
    "title": "Aurum API",
    "description": "Aurum Market Intelligence Platform API",
    "version": "2.0.0"
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Health Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Ready",
        "description": "Deep readiness check with comprehensive dependency validation.",
        "operationId": "ready_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Ready Ready Get"
                }
              }
            }
          }
        }
      }
    },
    "/v1/curves": {
      "get": {
        "summary": "List Curves",
        "description": "List curve observations with cursor pagination and optional CSV.\n\nSupports forward (`cursor`/`since_cursor`) and backward (`prev_cursor`)\niteration using opaque tokens produced in `meta`. When `format=csv`, the\nendpoint streams a CSV response with appropriate Cache-Control headers.",
        "operationId": "list_curves_v1_curves_get",
        "parameters": [
          {
            "name": "asof",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "As-of date filter (YYYY-MM-DD)",
              "title": "Asof"
            },
            "description": "As-of date filter (YYYY-MM-DD)"
          },
          {
            "name": "curve_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Curve Key"
            }
          },
          {
            "name": "asset_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Class"
            }
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Iso"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Market"
            }
          },
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product"
            }
          },
          {
            "name": "block",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Block"
            }
          },
          {
            "name": "tenor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(MONTHLY|CALENDAR|SEASON|QUARTER)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenor Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          },
          {
            "name": "prev_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor pointing to the previous page; obtained from meta.prev_cursor",
              "title": "Prev Cursor"
            },
            "description": "Cursor pointing to the previous page; obtained from meta.prev_cursor"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurveResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/curves/diff": {
      "get": {
        "summary": "List Curves Diff",
        "operationId": "list_curves_diff_v1_curves_diff_get",
        "parameters": [
          {
            "name": "asof_a",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "First as-of date",
              "title": "Asof A"
            },
            "description": "First as-of date"
          },
          {
            "name": "asof_b",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Second as-of date",
              "title": "Asof B"
            },
            "description": "Second as-of date"
          },
          {
            "name": "curve_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Curve Key"
            }
          },
          {
            "name": "asset_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Class"
            }
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Iso"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Market"
            }
          },
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product"
            }
          },
          {
            "name": "block",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Block"
            }
          },
          {
            "name": "tenor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(MONTHLY|CALENDAR|SEASON|QUARTER)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenor Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurveDiffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/dimensions": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "List Dimensions",
        "operationId": "list_dimensions_v1_metadata_dimensions_get",
        "parameters": [
          {
            "name": "asof",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asof"
            }
          },
          {
            "name": "asset_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Class"
            }
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Iso"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Market"
            }
          },
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product"
            }
          },
          {
            "name": "block",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Block"
            }
          },
          {
            "name": "tenor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(MONTHLY|CALENDAR|SEASON|QUARTER)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenor Type"
            }
          },
          {
            "name": "per_dim_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 500,
              "title": "Per Dim Limit"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional case-insensitive startswith filter applied to each dimension list",
              "title": "Prefix"
            },
            "description": "Optional case-insensitive startswith filter applied to each dimension list"
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include per-dimension value counts when true",
              "default": false,
              "title": "Include Counts"
            },
            "description": "Include per-dimension value counts when true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/locations": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "List ISO locations",
        "description": "Return known ISO locations with optional filters by ISO code and a case-insensitive prefix applied to id or name.",
        "operationId": "list_locations_v1_metadata_locations_get",
        "parameters": [
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ISO code (e.g., PJM, CAISO)",
              "examples": {
                "default": {
                  "value": "PJM"
                }
              },
              "title": "Iso"
            },
            "description": "Filter by ISO code (e.g., PJM, CAISO)"
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Case-insensitive startswith on id or name",
              "examples": {
                "default": {
                  "value": "AE"
                }
              },
              "title": "Prefix"
            },
            "description": "Case-insensitive startswith on id or name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsoLocationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/locations/{iso}/{location_id}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Get ISO location",
        "description": "Return metadata for a specific ISO location id (case-insensitive match).",
        "operationId": "get_location_v1_metadata_locations__iso___location_id__get",
        "parameters": [
          {
            "name": "iso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ISO code",
              "examples": {
                "default": {
                  "value": "PJM"
                }
              },
              "title": "Iso"
            },
            "description": "ISO code"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Location identifier",
              "examples": {
                "default": {
                  "value": "AECO"
                }
              },
              "title": "Location Id"
            },
            "description": "Location identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsoLocationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/units": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "List canonical currencies and units",
        "description": "Return distinct currencies and units derived from the units mapping file. Optionally filter by case-insensitive prefix.",
        "operationId": "list_units_v1_metadata_units_get",
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional startswith filter",
              "examples": {
                "sample": {
                  "value": "US"
                }
              },
              "title": "Prefix"
            },
            "description": "Optional startswith filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsCanonicalResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/units/mapping": {
      "get": {
        "tags": [
          "Metadata",
          "Units"
        ],
        "summary": "List unit mappings",
        "description": "Return raw-to-canonical unit mappings. Optionally filter by case-insensitive prefix on the raw units string.",
        "operationId": "list_unit_mappings_v1_metadata_units_mapping_get",
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Startswith filter on units_raw",
              "examples": {
                "sample": {
                  "value": "USD/"
                }
              },
              "title": "Prefix"
            },
            "description": "Startswith filter on units_raw"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsMappingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/calendars": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "List calendars",
        "description": "Return available trading calendars and their timezones.",
        "operationId": "list_calendars_v1_metadata_calendars_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/calendars/{name}/blocks": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "List calendar blocks",
        "description": "Return block names for a given calendar.",
        "operationId": "list_calendar_blocks_v1_metadata_calendars__name__blocks_get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Calendar name",
              "examples": {
                "default": {
                  "value": "us"
                }
              },
              "title": "Name"
            },
            "description": "Calendar name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarBlocksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/calendars/{name}/hours": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Block hours for a date",
        "description": "Return timezone-aware datetimes for the specified block on a given date.",
        "operationId": "calendar_hours_v1_metadata_calendars__name__hours_get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Calendar name",
              "examples": {
                "default": {
                  "value": "us"
                }
              },
              "title": "Name"
            },
            "description": "Calendar name"
          },
          {
            "name": "block",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block identifier",
              "examples": {
                "default": {
                  "value": "ON_PEAK"
                }
              },
              "title": "Block"
            },
            "description": "Block identifier"
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Local calendar date (YYYY-MM-DD)",
              "examples": {
                "default": {
                  "value": "2024-01-02"
                }
              },
              "title": "Date"
            },
            "description": "Local calendar date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarHoursResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/calendars/{name}/expand": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Expand block over date range",
        "description": "Return timezone-aware datetimes for each date in the range where the block applies.",
        "operationId": "calendar_expand_v1_metadata_calendars__name__expand_get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Calendar name",
              "examples": {
                "default": {
                  "value": "us"
                }
              },
              "title": "Name"
            },
            "description": "Calendar name"
          },
          {
            "name": "block",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block identifier",
              "examples": {
                "default": {
                  "value": "ON_PEAK"
                }
              },
              "title": "Block"
            },
            "description": "Block identifier"
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Start date (YYYY-MM-DD)",
              "examples": {
                "default": {
                  "value": "2024-01-01"
                }
              },
              "title": "Start"
            },
            "description": "Start date (YYYY-MM-DD)"
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "End date (YYYY-MM-DD)",
              "examples": {
                "default": {
                  "value": "2024-01-02"
                }
              },
              "title": "End"
            },
            "description": "End date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarHoursResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iso/lmp/last-24h": {
      "get": {
        "tags": [
          "ISO"
        ],
        "summary": "Latest ISO LMP observations",
        "description": "Return the most recent 24 hours of ISO LMP records across all markets.",
        "operationId": "iso_lmp_last_24h_v1_iso_lmp_last_24h_get",
        "parameters": [
          {
            "name": "iso_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ISO code",
              "title": "Iso Code"
            },
            "description": "Filter by ISO code"
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by market",
              "title": "Market"
            },
            "description": "Filter by market"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by settlement location id",
              "title": "Location Id"
            },
            "description": "Filter by settlement location id"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 500,
              "title": "Limit"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsoLmpResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iso/lmp/hourly": {
      "get": {
        "tags": [
          "ISO"
        ],
        "summary": "Hourly ISO LMP aggregates",
        "description": "Return aggregated hourly ISO LMP values for the last 30 days.",
        "operationId": "iso_lmp_hourly_v1_iso_lmp_hourly_get",
        "parameters": [
          {
            "name": "iso_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ISO code",
              "title": "Iso Code"
            },
            "description": "Filter by ISO code"
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by market",
              "title": "Market"
            },
            "description": "Filter by market"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by settlement location id",
              "title": "Location Id"
            },
            "description": "Filter by settlement location id"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Earliest interval_start (ISO 8601)",
              "examples": {
                "default": {
                  "value": "2024-01-01T00:00:00Z"
                }
              },
              "title": "Start"
            },
            "description": "Earliest interval_start (ISO 8601)"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Latest interval_start (ISO 8601)",
              "examples": {
                "default": {
                  "value": "2024-01-31T23:59:59Z"
                }
              },
              "title": "End"
            },
            "description": "Latest interval_start (ISO 8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 500,
              "title": "Limit"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsoLmpAggregateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iso/lmp/daily": {
      "get": {
        "tags": [
          "ISO"
        ],
        "summary": "Daily ISO LMP aggregates",
        "description": "Return daily ISO LMP aggregates for the past year.",
        "operationId": "iso_lmp_daily_v1_iso_lmp_daily_get",
        "parameters": [
          {
            "name": "iso_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ISO code",
              "title": "Iso Code"
            },
            "description": "Filter by ISO code"
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by market",
              "title": "Market"
            },
            "description": "Filter by market"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by settlement location id",
              "title": "Location Id"
            },
            "description": "Filter by settlement location id"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Earliest interval_start (ISO 8601)",
              "examples": {
                "default": {
                  "value": "2023-01-01T00:00:00Z"
                }
              },
              "title": "Start"
            },
            "description": "Earliest interval_start (ISO 8601)"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Latest interval_start (ISO 8601)",
              "examples": {
                "default": {
                  "value": "2023-12-31T23:59:59Z"
                }
              },
              "title": "End"
            },
            "description": "Latest interval_start (ISO 8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 500,
              "title": "Limit"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsoLmpAggregateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/iso/lmp/negative": {
      "get": {
        "tags": [
          "ISO"
        ],
        "summary": "Recent negative ISO LMP events",
        "description": "Return the most negative ISO LMP observations across the last seven days.",
        "operationId": "iso_lmp_negative_v1_iso_lmp_negative_get",
        "parameters": [
          {
            "name": "iso_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ISO code",
              "title": "Iso Code"
            },
            "description": "Filter by ISO code"
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by market",
              "title": "Market"
            },
            "description": "Filter by market"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsoLmpResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/eia/datasets": {
      "get": {
        "tags": [
          "Metadata",
          "EIA"
        ],
        "summary": "List EIA datasets",
        "description": "Return EIA datasets from the harvested catalog with optional case-insensitive prefix filter on path or name.",
        "operationId": "list_eia_datasets_v1_metadata_eia_datasets_get",
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Startswith filter on path or name",
              "examples": {
                "default": {
                  "value": "natural-gas/"
                }
              },
              "title": "Prefix"
            },
            "description": "Startswith filter on path or name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EiaDatasetsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/eia/datasets/{dataset_path}": {
      "get": {
        "tags": [
          "Metadata",
          "EIA"
        ],
        "summary": "Get EIA dataset",
        "description": "Return dataset metadata including facets, frequencies, and data columns for the specified dataset path.",
        "operationId": "get_eia_dataset_v1_metadata_eia_datasets__dataset_path__get",
        "parameters": [
          {
            "name": "dataset_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Dataset path (e.g., natural-gas/stor/wkly)",
              "examples": {
                "default": {
                  "value": "natural-gas/stor/wkly"
                }
              },
              "title": "Dataset Path"
            },
            "description": "Dataset path (e.g., natural-gas/stor/wkly)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EiaDatasetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ref/eia/series": {
      "get": {
        "tags": [
          "Metadata",
          "EIA"
        ],
        "summary": "List EIA series observations",
        "description": "Return EIA observations from the canonical Timescale table with optional filters and cursor-based pagination.",
        "operationId": "list_eia_series_v1_ref_eia_series_get",
        "parameters": [
          {
            "name": "series_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by exact series identifier",
              "title": "Series Id"
            },
            "description": "Filter by exact series identifier"
          },
          {
            "name": "frequency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Frequency label (ANNUAL, MONTHLY, etc.)",
              "title": "Frequency"
            },
            "description": "Frequency label (ANNUAL, MONTHLY, etc.)"
          },
          {
            "name": "area",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Area/region filter",
              "title": "Area"
            },
            "description": "Area/region filter"
          },
          {
            "name": "sector",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sector/category filter",
              "title": "Sector"
            },
            "description": "Sector/category filter"
          },
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "EIA dataset identifier",
              "title": "Dataset"
            },
            "description": "EIA dataset identifier"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unit filter",
              "title": "Unit"
            },
            "description": "Unit filter"
          },
          {
            "name": "canonical_unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Normalized unit filter",
              "title": "Canonical Unit"
            },
            "description": "Normalized unit filter"
          },
          {
            "name": "canonical_currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Canonical currency filter",
              "title": "Canonical Currency"
            },
            "description": "Canonical currency filter"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source attribution filter",
              "title": "Source"
            },
            "description": "Source attribution filter"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter observations with period_start >= this timestamp (ISO 8601)",
              "title": "Start"
            },
            "description": "Filter observations with period_start >= this timestamp (ISO 8601)"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter observations with period_start <= this timestamp (ISO 8601)",
              "title": "End"
            },
            "description": "Filter observations with period_start <= this timestamp (ISO 8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Offset for pagination (use 'cursor' when possible)",
              "default": 0,
              "title": "Offset"
            },
            "description": "Offset for pagination (use 'cursor' when possible)"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for forward pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for forward pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume from a previous next_cursor value"
          },
          {
            "name": "prev_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor obtained from meta.prev_cursor to navigate backwards",
              "title": "Prev Cursor"
            },
            "description": "Cursor obtained from meta.prev_cursor to navigate backwards"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EiaSeriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ref/eia/series/dimensions": {
      "get": {
        "tags": [
          "Metadata",
          "EIA"
        ],
        "summary": "List EIA series dimensions",
        "description": "Return distinct dimension values (dataset, area, sector, unit, canonical_unit, canonical_currency, frequency, source) for EIA series observations.",
        "operationId": "list_eia_series_dimensions_v1_ref_eia_series_dimensions_get",
        "parameters": [
          {
            "name": "series_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional exact series identifier filter",
              "title": "Series Id"
            },
            "description": "Optional exact series identifier filter"
          },
          {
            "name": "frequency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional frequency filter",
              "title": "Frequency"
            },
            "description": "Optional frequency filter"
          },
          {
            "name": "area",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Area filter",
              "title": "Area"
            },
            "description": "Area filter"
          },
          {
            "name": "sector",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sector filter",
              "title": "Sector"
            },
            "description": "Sector filter"
          },
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Dataset filter",
              "title": "Dataset"
            },
            "description": "Dataset filter"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unit filter",
              "title": "Unit"
            },
            "description": "Unit filter"
          },
          {
            "name": "canonical_unit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Normalized unit filter",
              "title": "Canonical Unit"
            },
            "description": "Normalized unit filter"
          },
          {
            "name": "canonical_currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Canonical currency filter",
              "title": "Canonical Currency"
            },
            "description": "Canonical currency filter"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source filter",
              "title": "Source"
            },
            "description": "Source filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EiaSeriesDimensionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/curves/strips": {
      "get": {
        "summary": "List Strips",
        "operationId": "list_strips_v1_curves_strips_get",
        "parameters": [
          {
            "name": "asof",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asof"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(CALENDAR|SEASON|QUARTER)$",
              "description": "Strip type",
              "title": "Type"
            },
            "description": "Strip type"
          },
          {
            "name": "curve_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Curve Key"
            }
          },
          {
            "name": "asset_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Class"
            }
          },
          {
            "name": "iso",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Iso"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "market",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Market"
            }
          },
          {
            "name": "product",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Product"
            }
          },
          {
            "name": "block",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Block"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurveResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios": {
      "get": {
        "summary": "List Scenarios",
        "description": "List scenarios for the authenticated tenant with offset/cursor support.\n\nAccepts optional filters (status, name, tag, created_{after,before}). When\nthe number of results equals `limit`, a `meta.next_cursor` is returned that\ncan be supplied via `cursor` on subsequent requests.",
        "operationId": "list_scenarios_v1_scenarios_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^[A-Z_]+$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional scenario status filter",
              "title": "Status"
            },
            "description": "Optional scenario status filter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by scenario name (case-insensitive substring match)",
              "title": "Name"
            },
            "description": "Filter by scenario name (case-insensitive substring match)"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by tag",
              "title": "Tag"
            },
            "description": "Filter by tag"
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return scenarios created at or after this timestamp (ISO 8601)",
              "title": "Created After"
            },
            "description": "Return scenarios created at or after this timestamp (ISO 8601)"
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return scenarios created at or before this timestamp (ISO 8601)",
              "title": "Created Before"
            },
            "description": "Return scenarios created at or before this timestamp (ISO 8601)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Scenario",
        "description": "Create a new scenario for the resolved tenant and return its definition.",
        "operationId": "create_scenario_v1_scenarios_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScenarioRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/{scenario_id}": {
      "get": {
        "summary": "Get Scenario",
        "description": "Fetch a scenario by id with ETag support for conditional responses.",
        "operationId": "get_scenario_v1_scenarios__scenario_id__get",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Scenario",
        "description": "Delete a scenario by id. Returns 204 when deletion succeeds.",
        "operationId": "delete_scenario_v1_scenarios__scenario_id__delete",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/{scenario_id}/runs": {
      "get": {
        "summary": "List Scenario Runs",
        "description": "List runs for a scenario with cursor/offset pagination and time filters.",
        "operationId": "list_scenario_runs_v1_scenarios__scenario_id__runs_get",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(QUEUED|RUNNING|SUCCEEDED|FAILED|CANCELLED)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "State"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return runs queued at or after this timestamp (ISO 8601)",
              "title": "Created After"
            },
            "description": "Return runs queued at or after this timestamp (ISO 8601)"
          },
          {
            "name": "created_before",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return runs queued at or before this timestamp (ISO 8601)",
              "title": "Created Before"
            },
            "description": "Return runs queued at or before this timestamp (ISO 8601)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioRunListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/{scenario_id}/run": {
      "post": {
        "summary": "Run Scenario",
        "description": "Create or reuse a scenario run (idempotent by input fingerprint).",
        "operationId": "run_scenario_v1_scenarios__scenario_id__run_post",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/ScenarioRunOptions"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Options"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioRunResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/{scenario_id}/runs/{run_id}": {
      "get": {
        "summary": "Get Scenario Run",
        "description": "Fetch a specific run for a scenario; responds with ETag headers.",
        "operationId": "get_scenario_run_v1_scenarios__scenario_id__runs__run_id__get",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          },
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioRunResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/runs/{run_id}/state": {
      "post": {
        "summary": "Update Scenario Run State",
        "description": "Update the state of an existing run (e.g., RUNNING, SUCCEEDED, FAILED).",
        "operationId": "update_scenario_run_state_v1_scenarios_runs__run_id__state_post",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(QUEUED|RUNNING|SUCCEEDED|FAILED|CANCELLED)$",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioRunResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/runs/{run_id}/cancel": {
      "post": {
        "summary": "Cancel Scenario Run",
        "description": "Cancel a run by id and return its updated state.",
        "operationId": "cancel_scenario_run_v1_scenarios_runs__run_id__cancel_post",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioRunResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/cache/scenario/{scenario_id}/invalidate": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Invalidate cached scenario outputs",
        "operationId": "invalidate_scenario_cache_v1_admin_cache_scenario__scenario_id__invalidate_post",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional tenant override; defaults to the calling principal's tenant",
              "title": "Tenant Id"
            },
            "description": "Optional tenant override; defaults to the calling principal's tenant"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/mappings": {
      "post": {
        "tags": [
          "Admin",
          "Mappings"
        ],
        "summary": "Create a new series-curve mapping",
        "description": "Create a new mapping between an external series and an internal curve key. Requires admin privileges.",
        "operationId": "create_series_curve_mapping_v1_admin_mappings_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesCurveMappingCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesCurveMappingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin",
          "Mappings"
        ],
        "summary": "List series-curve mappings",
        "description": "List series-curve mappings with optional filtering.",
        "operationId": "list_series_curve_mappings_v1_admin_mappings_get",
        "parameters": [
          {
            "name": "external_provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by external provider",
              "title": "External Provider"
            },
            "description": "Filter by external provider"
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show only active mappings",
              "default": true,
              "title": "Active Only"
            },
            "description": "Show only active mappings"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesCurveMappingListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/mappings/{provider}/{series_id}": {
      "put": {
        "tags": [
          "Admin",
          "Mappings"
        ],
        "summary": "Update a series-curve mapping",
        "description": "Update an existing series-curve mapping.",
        "operationId": "update_series_curve_mapping_v1_admin_mappings__provider___series_id__put",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          },
          {
            "name": "series_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Series Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriesCurveMappingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesCurveMappingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin",
          "Mappings"
        ],
        "summary": "Deactivate a series-curve mapping",
        "description": "Deactivate an existing series-curve mapping.",
        "operationId": "deactivate_series_curve_mapping_v1_admin_mappings__provider___series_id__delete",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          },
          {
            "name": "series_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Series Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesCurveMappingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/mappings/search": {
      "get": {
        "tags": [
          "Admin",
          "Mappings"
        ],
        "summary": "Find potential curve mappings",
        "description": "Find potential curve mappings for unmapped external series.",
        "operationId": "find_potential_mappings_v1_admin_mappings_search_get",
        "parameters": [
          {
            "name": "external_provider",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "External provider name",
              "title": "External Provider"
            },
            "description": "External provider name"
          },
          {
            "name": "external_series_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "External series identifier",
              "title": "External Series Id"
            },
            "description": "External series identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of suggestions",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of suggestions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeriesCurveMappingSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ppa/contracts": {
      "get": {
        "summary": "List Ppa Contracts",
        "operationId": "list_ppa_contracts_v1_ppa_contracts_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PpaContractListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Ppa Contract",
        "operationId": "create_ppa_contract_v1_ppa_contracts_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PpaContractCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PpaContractResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ppa/contracts/{contract_id}": {
      "get": {
        "summary": "Get Ppa Contract",
        "operationId": "get_ppa_contract_v1_ppa_contracts__contract_id__get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contract Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PpaContractResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Ppa Contract",
        "operationId": "update_ppa_contract_v1_ppa_contracts__contract_id__patch",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contract Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PpaContractUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PpaContractResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Ppa Contract",
        "operationId": "delete_ppa_contract_v1_ppa_contracts__contract_id__delete",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contract Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ppa/contracts/{contract_id}/valuations": {
      "get": {
        "summary": "List Ppa Contract Valuations",
        "operationId": "list_ppa_contract_valuations_v1_ppa_contracts__contract_id__valuations_get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contract Id"
            }
          },
          {
            "name": "scenario_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by scenario identifier",
              "title": "Scenario Id"
            },
            "description": "Filter by scenario identifier"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by valuation metric name",
              "title": "Metric"
            },
            "description": "Filter by valuation metric name"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          },
          {
            "name": "prev_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prev Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PpaValuationListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ppa/valuate": {
      "post": {
        "summary": "Valuate Ppa",
        "operationId": "valuate_ppa_v1_ppa_valuate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PpaValuationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PpaValuationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/{scenario_id}/outputs": {
      "get": {
        "summary": "List Scenario Outputs",
        "description": "List scenario outputs with hardened cursor pagination and CSV option.\n\nUses `cursor`/`since_cursor` for forward iteration and `prev_cursor` to\nfetch the previous page. When `format=csv`, streams a CSV with `next_cursor`\nand `prev_cursor` included in headers.",
        "operationId": "list_scenario_outputs_v1_scenarios__scenario_id__outputs_get",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant identifier override; defaults to the authenticated tenant",
              "title": "Tenant Id"
            },
            "description": "Tenant identifier override; defaults to the authenticated tenant"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metric"
            }
          },
          {
            "name": "tenor_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenor Type"
            }
          },
          {
            "name": "curve_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Curve Key"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previously returned next_cursor",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previously returned next_cursor"
          },
          {
            "name": "prev_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor pointing to the previous page; obtained from meta.prev_cursor",
              "title": "Prev Cursor"
            },
            "description": "Cursor pointing to the previous page; obtained from meta.prev_cursor"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv)$",
              "description": "Set to 'csv' to stream results as CSV",
              "default": "json",
              "title": "Format"
            },
            "description": "Set to 'csv' to stream results as CSV"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioOutputResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scenarios/{scenario_id}/metrics/latest": {
      "get": {
        "summary": "List Scenario Metrics Latest",
        "description": "Return the latest metrics for a scenario with stable pagination.\n\nDesigned to fetch most recent metric points per curve/metric, with\n`cursor` tokens enabling resumable iteration.",
        "operationId": "list_scenario_metrics_latest_v1_scenarios__scenario_id__metrics_latest_get",
        "parameters": [
          {
            "name": "scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Scenario Id"
            }
          },
          {
            "name": "tenant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tenant identifier override; defaults to the authenticated tenant",
              "title": "Tenant Id"
            },
            "description": "Tenant identifier override; defaults to the authenticated tenant"
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by metric name (e.g., mid)",
              "title": "Metric"
            },
            "description": "Filter by metric name (e.g., mid)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previously returned next_cursor",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previously returned next_cursor"
          },
          {
            "name": "prev_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor pointing to the previous page; obtained from meta.prev_cursor",
              "title": "Prev Cursor"
            },
            "description": "Cursor pointing to the previous page; obtained from meta.prev_cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScenarioMetricLatestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/drought/dimensions": {
      "get": {
        "summary": "Get Drought Dimensions",
        "operationId": "get_drought_dimensions_v1_drought_dimensions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DroughtDimensionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/drought/indices": {
      "get": {
        "summary": "Get Drought Indices",
        "operationId": "get_drought_indices_v1_drought_indices_get",
        "parameters": [
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source dataset (nclimgrid, acis, cpc, prism, eddi).",
              "title": "Dataset"
            },
            "description": "Source dataset (nclimgrid, acis, cpc, prism, eddi)."
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Index name (SPI, SPEI, EDDI, PDSI, QuickDRI, VHI).",
              "title": "Index"
            },
            "description": "Index name (SPI, SPEI, EDDI, PDSI, QuickDRI, VHI)."
          },
          {
            "name": "timescale",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Accumulation window such as 1M, 3M, 6M.",
              "title": "Timescale"
            },
            "description": "Accumulation window such as 1M, 3M, 6M."
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Region specifier REGION_TYPE:REGION_ID.",
              "title": "Region"
            },
            "description": "Region specifier REGION_TYPE:REGION_ID."
          },
          {
            "name": "region_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Type"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Inclusive start date (YYYY-MM-DD).",
              "title": "Start"
            },
            "description": "Inclusive start date (YYYY-MM-DD)."
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Inclusive end date (YYYY-MM-DD).",
              "title": "End"
            },
            "description": "Inclusive end date (YYYY-MM-DD)."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 250,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DroughtIndexResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/drought/usdm": {
      "get": {
        "summary": "Get Drought Usdm",
        "operationId": "get_drought_usdm_v1_drought_usdm_get",
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Region specifier REGION_TYPE:REGION_ID.",
              "title": "Region"
            },
            "description": "Region specifier REGION_TYPE:REGION_ID."
          },
          {
            "name": "region_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Type"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 250,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DroughtUsdmResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/drought/tiles/{dataset}/{index}/{timescale}/{z}/{x}/{y}.png": {
      "get": {
        "summary": "Proxy Drought Tile",
        "operationId": "proxy_drought_tile_v1_drought_tiles__dataset___index___timescale___z___x___y__png_get",
        "parameters": [
          {
            "name": "dataset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Index"
            }
          },
          {
            "name": "timescale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timescale"
            }
          },
          {
            "name": "z",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Z"
            }
          },
          {
            "name": "x",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "X"
            }
          },
          {
            "name": "y",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Y"
            }
          },
          {
            "name": "valid_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Valid date for the tile (YYYY-MM-DD).",
              "title": "Valid Date"
            },
            "description": "Valid date for the tile (YYYY-MM-DD)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/drought/info/{dataset}/{index}/{timescale}": {
      "get": {
        "summary": "Get Drought Tile Metadata",
        "operationId": "get_drought_tile_metadata_v1_drought_info__dataset___index___timescale__get",
        "parameters": [
          {
            "name": "dataset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dataset"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Index"
            }
          },
          {
            "name": "timescale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Timescale"
            }
          },
          {
            "name": "valid_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Valid date for the raster (YYYY-MM-DD).",
              "title": "Valid Date"
            },
            "description": "Valid date for the raster (YYYY-MM-DD)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DroughtInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/external/providers": {
      "get": {
        "summary": "List External Providers",
        "description": "List external data providers.\n\nReturns a paginated list of external data providers with their metadata.",
        "operationId": "list_external_providers_v1_external_providers_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of providers to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of providers to return"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Opaque cursor for stable pagination",
              "title": "Cursor"
            },
            "description": "Opaque cursor for stable pagination"
          },
          {
            "name": "since_cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value",
              "title": "Since Cursor"
            },
            "description": "Alias for 'cursor' to resume iteration from a previous next_cursor value"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "DEPRECATED: Use cursor for pagination instead",
              "title": "Offset"
            },
            "description": "DEPRECATED: Use cursor for pagination instead"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalProvidersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/external/series": {
      "get": {
        "summary": "List External Series",
        "description": "List external series with optional filtering.\n\nReturns a paginated list of external data series filtered by provider, frequency, and as-of date.",
        "operationId": "list_external_series_v1_external_series_get",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider"
            }
          },
          {
            "name": "frequency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Frequency"
            }
          },
          {
            "name": "asof",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asof"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalSeriesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/external/series/{series_id}/observations": {
      "get": {
        "summary": "Get External Series Observations",
        "description": "Get observations for a specific external series.\n\nReturns observations for the specified series with optional date range filtering and frequency conversion.",
        "operationId": "get_external_series_observations_v1_external_series__series_id__observations_get",
        "parameters": [
          {
            "name": "series_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Series Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "frequency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Frequency"
            }
          },
          {
            "name": "asof",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asof"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 500,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "json",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalObservationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/metadata/external": {
      "get": {
        "summary": "Get External Metadata",
        "description": "Get external data metadata.\n\nReturns metadata about external data providers and their series.",
        "operationId": "get_external_metadata_v1_metadata_external_get",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by provider",
              "title": "Provider"
            },
            "description": "Filter by provider"
          },
          {
            "name": "include_counts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include series counts in response",
              "default": false,
              "title": "Include Counts"
            },
            "description": "Include series counts in response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CalendarBlocksResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "CalendarBlocksResponse"
      },
      "CalendarHoursResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "CalendarHoursResponse"
      },
      "CalendarOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "timezone": {
            "type": "string",
            "title": "Timezone"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name",
          "timezone"
        ],
        "title": "CalendarOut"
      },
      "CalendarsResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CalendarOut"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "CalendarsResponse"
      },
      "CreateScenarioRequest": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Scenario name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Scenario description"
          },
          "assumptions": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Assumptions",
            "description": "List of scenario assumptions"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "description": "Scenario parameters"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Scenario tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "tenant_id",
          "name"
        ],
        "title": "CreateScenarioRequest",
        "description": "Request model for creating a scenario."
      },
      "CurveDiffPoint": {
        "properties": {
          "curve_key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Curve Key"
          },
          "tenor_label": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Tenor Label"
          },
          "tenor_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenor Type"
          },
          "contract_month": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Month"
          },
          "asof_a": {
            "type": "string",
            "format": "date",
            "title": "Asof A"
          },
          "mid_a": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mid A"
          },
          "asof_b": {
            "type": "string",
            "format": "date",
            "title": "Asof B"
          },
          "mid_b": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mid B"
          },
          "diff_abs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Diff Abs"
          },
          "diff_pct": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Diff Pct"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "curve_key",
          "tenor_label",
          "asof_a",
          "asof_b"
        ],
        "title": "CurveDiffPoint",
        "description": "Curve difference point comparing two dates with validation."
      },
      "CurveDiffResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CurveDiffPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "CurveDiffResponse",
        "description": "Response model for curve difference data."
      },
      "CurvePoint": {
        "properties": {
          "curve_key": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Curve Key"
          },
          "tenor_label": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Tenor Label"
          },
          "tenor_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenor Type"
          },
          "contract_month": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contract Month"
          },
          "asof_date": {
            "type": "string",
            "format": "date",
            "title": "Asof Date"
          },
          "mid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mid"
          },
          "bid": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bid"
          },
          "ask": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ask"
          },
          "price_type": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "curve_key",
          "tenor_label",
          "asof_date"
        ],
        "title": "CurvePoint",
        "description": "Individual curve data point with comprehensive validation."
      },
      "CurveResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CurvePoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "CurveResponse",
        "description": "Response model for curve data."
      },
      "DimensionCount": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Count"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "value",
          "count"
        ],
        "title": "DimensionCount"
      },
      "DimensionsCountData": {
        "properties": {
          "asset_class": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Class"
          },
          "iso": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iso"
          },
          "location": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "market": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market"
          },
          "product": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product"
          },
          "block": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block"
          },
          "tenor_type": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DimensionCount"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenor Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "DimensionsCountData"
      },
      "DimensionsData": {
        "properties": {
          "asset_class": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asset Class"
          },
          "iso": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Iso"
          },
          "location": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "market": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Market"
          },
          "product": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product"
          },
          "block": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block"
          },
          "tenor_type": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenor Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "DimensionsData"
      },
      "DimensionsResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/DimensionsData"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DimensionsCountData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "DimensionsResponse"
      },
      "DroughtDimensions": {
        "properties": {
          "datasets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Datasets"
          },
          "indices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Indices"
          },
          "timescales": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Timescales"
          },
          "layers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Layers"
          },
          "region_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Region Types"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "datasets",
          "indices",
          "timescales",
          "layers",
          "region_types"
        ],
        "title": "DroughtDimensions"
      },
      "DroughtDimensionsResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/DroughtDimensions"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "DroughtDimensionsResponse"
      },
      "DroughtIndexPoint": {
        "properties": {
          "series_id": {
            "type": "string",
            "title": "Series Id"
          },
          "dataset": {
            "type": "string",
            "title": "Dataset"
          },
          "index": {
            "type": "string",
            "title": "Index"
          },
          "timescale": {
            "type": "string",
            "title": "Timescale"
          },
          "valid_date": {
            "type": "string",
            "format": "date",
            "title": "Valid Date"
          },
          "as_of": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "As Of"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "poc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Poc"
          },
          "region_type": {
            "type": "string",
            "title": "Region Type"
          },
          "region_id": {
            "type": "string",
            "title": "Region Id"
          },
          "region_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Name"
          },
          "parent_region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Region Id"
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "series_id",
          "dataset",
          "index",
          "timescale",
          "valid_date",
          "region_type",
          "region_id"
        ],
        "title": "DroughtIndexPoint"
      },
      "DroughtIndexResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DroughtIndexPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "DroughtIndexResponse"
      },
      "DroughtInfoResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "DroughtInfoResponse"
      },
      "DroughtUsdmPoint": {
        "properties": {
          "region_type": {
            "type": "string",
            "title": "Region Type"
          },
          "region_id": {
            "type": "string",
            "title": "Region Id"
          },
          "region_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Name"
          },
          "parent_region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Region Id"
          },
          "valid_date": {
            "type": "string",
            "format": "date",
            "title": "Valid Date"
          },
          "as_of": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "As Of"
          },
          "d0_frac": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "D0 Frac"
          },
          "d1_frac": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "D1 Frac"
          },
          "d2_frac": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "D2 Frac"
          },
          "d3_frac": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "D3 Frac"
          },
          "d4_frac": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "D4 Frac"
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "region_type",
          "region_id",
          "valid_date"
        ],
        "title": "DroughtUsdmPoint"
      },
      "DroughtUsdmResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DroughtUsdmPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "DroughtUsdmResponse"
      },
      "EiaDatasetBriefOut": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_frequency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Frequency"
          },
          "start_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Period"
          },
          "end_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Period"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "path"
        ],
        "title": "EiaDatasetBriefOut"
      },
      "EiaDatasetDetailOut": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "frequencies": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Frequencies"
          },
          "facets": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Facets"
          },
          "data_columns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Data Columns"
          },
          "start_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Period"
          },
          "end_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Period"
          },
          "default_frequency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Frequency"
          },
          "default_date_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Date Format"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "path",
          "frequencies",
          "facets",
          "data_columns"
        ],
        "title": "EiaDatasetDetailOut"
      },
      "EiaDatasetResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/EiaDatasetDetailOut"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "EiaDatasetResponse"
      },
      "EiaDatasetsResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/EiaDatasetBriefOut"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "EiaDatasetsResponse"
      },
      "EiaSeriesDimensionsData": {
        "properties": {
          "dataset": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset"
          },
          "area": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area"
          },
          "sector": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sector"
          },
          "unit": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "canonical_unit": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Unit"
          },
          "canonical_currency": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Currency"
          },
          "frequency": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency"
          },
          "source": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "EiaSeriesDimensionsData"
      },
      "EiaSeriesDimensionsResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/EiaSeriesDimensionsData"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "EiaSeriesDimensionsResponse"
      },
      "EiaSeriesPoint": {
        "properties": {
          "series_id": {
            "type": "string",
            "title": "Series Id"
          },
          "period": {
            "type": "string",
            "title": "Period"
          },
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start"
          },
          "period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period End"
          },
          "frequency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "raw_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Raw Value"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "canonical_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Unit"
          },
          "canonical_currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Currency"
          },
          "canonical_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Canonical Value"
          },
          "conversion_factor": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Factor"
          },
          "area": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area"
          },
          "sector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sector"
          },
          "seasonal_adjustment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seasonal Adjustment"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "dataset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "ingest_ts": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingest Ts"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "series_id",
          "period",
          "period_start"
        ],
        "title": "EiaSeriesPoint"
      },
      "EiaSeriesResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/EiaSeriesPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "EiaSeriesResponse"
      },
      "ExternalMetadataResponse": {
        "properties": {
          "providers": {
            "items": {
              "$ref": "#/components/schemas/ExternalProvider"
            },
            "type": "array",
            "title": "Providers",
            "description": "List of providers"
          },
          "total_series": {
            "type": "integer",
            "title": "Total Series",
            "description": "Total number of external series"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated",
            "description": "Last update timestamp"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "providers",
          "total_series"
        ],
        "title": "ExternalMetadataResponse",
        "description": "Response for external data metadata."
      },
      "ExternalObservation": {
        "properties": {
          "series_id": {
            "type": "string",
            "title": "Series Id",
            "description": "Series identifier"
          },
          "observation_date": {
            "type": "string",
            "title": "Observation Date",
            "description": "Observation date"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Observation value"
          },
          "observation_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Metadata",
            "description": "Additional observation metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "series_id",
          "observation_date",
          "value"
        ],
        "title": "ExternalObservation",
        "description": "External data observation."
      },
      "ExternalObservationsResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ExternalObservation"
            },
            "type": "array",
            "title": "Data",
            "description": "List of observations"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Response metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "title": "ExternalObservationsResponse",
        "description": "Response for external series observations."
      },
      "ExternalProvider": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Provider identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Provider name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Provider description"
          },
          "base_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Url",
            "description": "Provider base URL"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated",
            "description": "Last update timestamp"
          },
          "series_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Count",
            "description": "Number of series from this provider"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "name",
          "description"
        ],
        "title": "ExternalProvider",
        "description": "External data provider."
      },
      "ExternalProvidersResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ExternalProvider"
            },
            "type": "array",
            "title": "Data",
            "description": "List of providers"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Response metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "title": "ExternalProvidersResponse",
        "description": "Response for external providers list."
      },
      "ExternalSeries": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Series identifier"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id",
            "description": "Provider identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Series name"
          },
          "frequency": {
            "type": "string",
            "title": "Frequency",
            "description": "Series frequency"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Series description"
          },
          "units": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Units",
            "description": "Series units"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated",
            "description": "Last update timestamp"
          },
          "observation_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Observation Count",
            "description": "Number of observations"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "provider_id",
          "name",
          "frequency",
          "description"
        ],
        "title": "ExternalSeries",
        "description": "External data series."
      },
      "ExternalSeriesResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ExternalSeries"
            },
            "type": "array",
            "title": "Data",
            "description": "List of series"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta",
            "description": "Response metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "title": "ExternalSeriesResponse",
        "description": "Response for external series list."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IsoLmpAggregatePoint": {
        "properties": {
          "iso_code": {
            "type": "string",
            "title": "Iso Code"
          },
          "market": {
            "type": "string",
            "title": "Market"
          },
          "interval_start": {
            "type": "string",
            "format": "date-time",
            "title": "Interval Start"
          },
          "location_id": {
            "type": "string",
            "title": "Location Id"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "uom": {
            "type": "string",
            "title": "Uom"
          },
          "price_avg": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Avg"
          },
          "price_min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Min"
          },
          "price_max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Max"
          },
          "price_stddev": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Stddev"
          },
          "sample_count": {
            "type": "integer",
            "title": "Sample Count"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "iso_code",
          "market",
          "interval_start",
          "location_id",
          "currency",
          "uom",
          "sample_count"
        ],
        "title": "IsoLmpAggregatePoint"
      },
      "IsoLmpAggregateResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/IsoLmpAggregatePoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "IsoLmpAggregateResponse"
      },
      "IsoLmpPoint": {
        "properties": {
          "iso_code": {
            "type": "string",
            "title": "Iso Code"
          },
          "market": {
            "type": "string",
            "title": "Market"
          },
          "delivery_date": {
            "type": "string",
            "format": "date",
            "title": "Delivery Date"
          },
          "interval_start": {
            "type": "string",
            "format": "date-time",
            "title": "Interval Start"
          },
          "interval_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval End"
          },
          "interval_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval Minutes"
          },
          "location_id": {
            "type": "string",
            "title": "Location Id"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "location_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Type"
          },
          "price_total": {
            "type": "number",
            "title": "Price Total"
          },
          "price_energy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Energy"
          },
          "price_congestion": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Congestion"
          },
          "price_loss": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Loss"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "uom": {
            "type": "string",
            "title": "Uom"
          },
          "settlement_point": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settlement Point"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "ingest_ts": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingest Ts"
          },
          "record_hash": {
            "type": "string",
            "title": "Record Hash"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "iso_code",
          "market",
          "delivery_date",
          "interval_start",
          "location_id",
          "price_total",
          "currency",
          "uom",
          "record_hash"
        ],
        "title": "IsoLmpPoint"
      },
      "IsoLmpResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/IsoLmpPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "IsoLmpResponse"
      },
      "IsoLocationOut": {
        "properties": {
          "iso": {
            "type": "string",
            "title": "Iso"
          },
          "location_id": {
            "type": "string",
            "title": "Location Id"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "location_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Type"
          },
          "zone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zone"
          },
          "hub": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hub"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "iso",
          "location_id"
        ],
        "title": "IsoLocationOut"
      },
      "IsoLocationResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/IsoLocationOut"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "IsoLocationResponse"
      },
      "IsoLocationsResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/IsoLocationOut"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "IsoLocationsResponse"
      },
      "Meta": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "query_time_ms": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Query Time Ms"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "prev_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prev Cursor"
          },
          "has_more": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has More"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total"
          },
          "offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offset"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "request_id",
          "query_time_ms"
        ],
        "title": "Meta",
        "description": "Metadata for API responses."
      },
      "PpaContractCreate": {
        "properties": {
          "instrument_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instrument Id"
          },
          "terms": {
            "type": "object",
            "title": "Terms"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PpaContractCreate"
      },
      "PpaContractListResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PpaContractOut"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "PpaContractListResponse"
      },
      "PpaContractOut": {
        "properties": {
          "instrument_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instrument Id"
          },
          "terms": {
            "type": "object",
            "title": "Terms"
          },
          "ppa_contract_id": {
            "type": "string",
            "title": "Ppa Contract Id"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "ppa_contract_id",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "PpaContractOut"
      },
      "PpaContractResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/PpaContractOut"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "PpaContractResponse"
      },
      "PpaContractUpdate": {
        "properties": {
          "instrument_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instrument Id"
          },
          "terms": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PpaContractUpdate"
      },
      "PpaMetric": {
        "properties": {
          "period_start": {
            "type": "string",
            "format": "date",
            "title": "Period Start"
          },
          "period_end": {
            "type": "string",
            "format": "date",
            "title": "Period End"
          },
          "metric": {
            "type": "string",
            "title": "Metric"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unit"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "curve_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Curve Key"
          },
          "tenor_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenor Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "period_start",
          "period_end",
          "metric",
          "value"
        ],
        "title": "PpaMetric"
      },
      "PpaValuationListResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PpaValuationRecord"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "PpaValuationListResponse"
      },
      "PpaValuationRecord": {
        "properties": {
          "asof_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asof Date"
          },
          "scenario_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period Start"
          },
          "period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Period End"
          },
          "metric": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "cashflow": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cashflow"
          },
          "npv": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Npv"
          },
          "irr": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Irr"
          },
          "curve_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Curve Key"
          },
          "version_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Hash"
          },
          "ingested_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ingested At"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "PpaValuationRecord"
      },
      "PpaValuationRequest": {
        "properties": {
          "ppa_contract_id": {
            "type": "string",
            "title": "Ppa Contract Id"
          },
          "scenario_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scenario Id"
          },
          "asof_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Asof Date"
          },
          "options": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "ppa_contract_id"
        ],
        "title": "PpaValuationRequest"
      },
      "PpaValuationResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PpaMetric"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "PpaValuationResponse"
      },
      "ScenarioData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Scenario ID"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id",
            "description": "Tenant identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Scenario name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Scenario description"
          },
          "status": {
            "$ref": "#/components/schemas/ScenarioStatus",
            "description": "Scenario status"
          },
          "unique_key": {
            "type": "string",
            "title": "Unique Key",
            "description": "Deterministic scenario key"
          },
          "assumptions": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Assumptions",
            "description": "List of scenario assumptions"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "description": "Scenario parameters"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Scenario tags"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By",
            "description": "Creator identifier"
          },
          "version": {
            "type": "integer",
            "title": "Version",
            "description": "Scenario version",
            "default": 1
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Scenario metadata"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "name",
          "status",
          "unique_key",
          "created_at"
        ],
        "title": "ScenarioData",
        "description": "Scenario data model."
      },
      "ScenarioListResponse": {
        "properties": {
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ScenarioData"
            },
            "type": "array",
            "title": "Data",
            "description": "List of scenarios"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "ScenarioListResponse",
        "description": "Response model for listing scenarios."
      },
      "ScenarioMetricLatest": {
        "properties": {
          "scenario_id": {
            "type": "string",
            "title": "Scenario Id",
            "description": "Scenario ID"
          },
          "metric_name": {
            "type": "string",
            "title": "Metric Name",
            "description": "Metric name"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Latest value"
          },
          "unit": {
            "type": "string",
            "title": "Unit",
            "description": "Unit of measurement"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Metric timestamp"
          },
          "trend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trend",
            "description": "Trend direction"
          },
          "change_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Percent",
            "description": "Percentage change"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "scenario_id",
          "metric_name",
          "value",
          "unit",
          "timestamp"
        ],
        "title": "ScenarioMetricLatest",
        "description": "Latest metrics for a scenario."
      },
      "ScenarioMetricLatestResponse": {
        "properties": {
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          },
          "data": {
            "$ref": "#/components/schemas/ScenarioMetricLatest",
            "description": "Latest metrics"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "ScenarioMetricLatestResponse",
        "description": "Response model for latest scenario metrics."
      },
      "ScenarioOutputPoint": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Output timestamp"
          },
          "metric_name": {
            "type": "string",
            "title": "Metric Name",
            "description": "Metric name"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Metric value"
          },
          "unit": {
            "type": "string",
            "title": "Unit",
            "description": "Unit of measurement"
          },
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Tags",
            "description": "Additional tags"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "timestamp",
          "metric_name",
          "value",
          "unit"
        ],
        "title": "ScenarioOutputPoint",
        "description": "Individual output point from scenario run."
      },
      "ScenarioOutputResponse": {
        "properties": {
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ScenarioOutputPoint"
            },
            "type": "array",
            "title": "Data",
            "description": "Output data points"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "ScenarioOutputResponse",
        "description": "Response model for scenario outputs."
      },
      "ScenarioResponse": {
        "properties": {
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          },
          "data": {
            "$ref": "#/components/schemas/ScenarioData",
            "description": "Scenario data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "ScenarioResponse",
        "description": "Response model for scenario operations."
      },
      "ScenarioRunData": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Run ID"
          },
          "scenario_id": {
            "type": "string",
            "title": "Scenario Id",
            "description": "Parent scenario ID"
          },
          "status": {
            "$ref": "#/components/schemas/ScenarioRunStatus",
            "description": "Run status"
          },
          "priority": {
            "$ref": "#/components/schemas/ScenarioRunPriority",
            "description": "Run priority"
          },
          "run_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Key",
            "description": "Deterministic run key"
          },
          "input_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Hash",
            "description": "Fingerprint of scenario inputs"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "Start timestamp"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Completion timestamp"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message"
          },
          "retry_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Retry Count",
            "description": "Number of retries attempted",
            "default": 0
          },
          "max_retries": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Max Retries",
            "description": "Maximum number of retries",
            "default": 3
          },
          "progress_percent": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress Percent",
            "description": "Progress percentage"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "description": "Run parameters"
          },
          "environment": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Environment",
            "description": "Run environment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queued At",
            "description": "When run was queued"
          },
          "cancelled_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancelled At",
            "description": "When run was cancelled"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "scenario_id",
          "status",
          "priority",
          "created_at"
        ],
        "title": "ScenarioRunData",
        "description": "Scenario run data model."
      },
      "ScenarioRunListResponse": {
        "properties": {
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ScenarioRunData"
            },
            "type": "array",
            "title": "Data",
            "description": "List of scenario runs"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "ScenarioRunListResponse",
        "description": "Response model for listing scenario runs."
      },
      "ScenarioRunOptions": {
        "properties": {
          "code_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Version",
            "description": "Scenario engine code version"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random seed for deterministic runs"
          },
          "priority": {
            "$ref": "#/components/schemas/ScenarioRunPriority",
            "description": "Run priority",
            "default": "normal"
          },
          "timeout_minutes": {
            "type": "integer",
            "maximum": 1440.0,
            "minimum": 1.0,
            "title": "Timeout Minutes",
            "description": "Timeout in minutes",
            "default": 60
          },
          "max_memory_mb": {
            "type": "integer",
            "maximum": 16384.0,
            "minimum": 256.0,
            "title": "Max Memory Mb",
            "description": "Max memory in MB",
            "default": 1024
          },
          "environment": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Environment",
            "description": "Environment variables"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "description": "Runtime parameters"
          },
          "max_retries": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Max Retries",
            "description": "Maximum retry attempts",
            "default": 3
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "Idempotency key for deduplication"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ScenarioRunOptions",
        "description": "Options for running a scenario."
      },
      "ScenarioRunPriority": {
        "type": "string",
        "enum": [
          "low",
          "normal",
          "high",
          "critical"
        ],
        "title": "ScenarioRunPriority",
        "description": "Scenario run priority levels."
      },
      "ScenarioRunResponse": {
        "properties": {
          "meta": {
            "type": "object",
            "title": "Meta",
            "description": "Response metadata"
          },
          "data": {
            "$ref": "#/components/schemas/ScenarioRunData",
            "description": "Scenario run data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "ScenarioRunResponse",
        "description": "Response model for scenario run operations."
      },
      "ScenarioRunStatus": {
        "type": "string",
        "enum": [
          "queued",
          "running",
          "succeeded",
          "failed",
          "cancelled",
          "timeout"
        ],
        "title": "ScenarioRunStatus",
        "description": "Scenario run status lifecycle."
      },
      "ScenarioStatus": {
        "type": "string",
        "enum": [
          "created",
          "active",
          "archived",
          "deleted"
        ],
        "title": "ScenarioStatus",
        "description": "Scenario status lifecycle."
      },
      "SeriesCurveMappingCreate": {
        "properties": {
          "external_provider": {
            "type": "string",
            "title": "External Provider",
            "description": "External data provider (FRED, EIA, etc.)"
          },
          "external_series_id": {
            "type": "string",
            "title": "External Series Id",
            "description": "Provider-specific series identifier"
          },
          "curve_key": {
            "type": "string",
            "title": "Curve Key",
            "description": "Internal curve key"
          },
          "mapping_confidence": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Mapping Confidence",
            "description": "Mapping confidence score (0.0-1.0)",
            "default": 1.0
          },
          "mapping_method": {
            "type": "string",
            "title": "Mapping Method",
            "description": "How the mapping was determined (manual, automated, heuristic)",
            "default": "manual"
          },
          "mapping_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Notes",
            "description": "Human-readable mapping rationale"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether this mapping is currently active",
            "default": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "external_provider",
          "external_series_id",
          "curve_key"
        ],
        "title": "SeriesCurveMappingCreate",
        "description": "Model for creating series-curve mappings."
      },
      "SeriesCurveMappingListResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SeriesCurveMappingOut"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "SeriesCurveMappingListResponse",
        "description": "Response model for listing series-curve mappings."
      },
      "SeriesCurveMappingOut": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "external_provider": {
            "type": "string",
            "title": "External Provider"
          },
          "external_series_id": {
            "type": "string",
            "title": "External Series Id"
          },
          "curve_key": {
            "type": "string",
            "title": "Curve Key"
          },
          "mapping_confidence": {
            "type": "number",
            "title": "Mapping Confidence"
          },
          "mapping_method": {
            "type": "string",
            "title": "Mapping Method"
          },
          "mapping_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Notes"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "external_provider",
          "external_series_id",
          "curve_key",
          "mapping_confidence",
          "mapping_method",
          "mapping_notes",
          "is_active",
          "created_by",
          "created_at",
          "updated_by",
          "updated_at"
        ],
        "title": "SeriesCurveMappingOut",
        "description": "Model for series-curve mapping responses."
      },
      "SeriesCurveMappingSearchResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "SeriesCurveMappingSearchResponse",
        "description": "Response model for potential mapping suggestions."
      },
      "SeriesCurveMappingUpdate": {
        "properties": {
          "mapping_confidence": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Confidence",
            "description": "Updated mapping confidence score"
          },
          "mapping_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Method",
            "description": "Updated mapping method"
          },
          "mapping_notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mapping Notes",
            "description": "Updated mapping rationale"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Updated active status"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "SeriesCurveMappingUpdate",
        "description": "Model for updating series-curve mappings."
      },
      "UnitMappingOut": {
        "properties": {
          "units_raw": {
            "type": "string",
            "title": "Units Raw"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "per_unit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Per Unit"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "units_raw"
        ],
        "title": "UnitMappingOut"
      },
      "UnitsCanonical": {
        "properties": {
          "currencies": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Currencies"
          },
          "units": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Units"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "currencies",
          "units"
        ],
        "title": "UnitsCanonical"
      },
      "UnitsCanonicalResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "$ref": "#/components/schemas/UnitsCanonical"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "UnitsCanonicalResponse"
      },
      "UnitsMappingResponse": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UnitMappingOut"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "meta",
          "data"
        ],
        "title": "UnitsMappingResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}