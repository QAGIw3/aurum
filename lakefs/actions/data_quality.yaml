actions:
  validate_raw_precommit:
    on:
      - pre-commit
    hooks:
      - id: ge-raw-landing
        type: executable
        description: Validate raw curve landing data before committing to lakeFS.
        properties:
          executable: hooks/run_ge_for_lakefs_event.py
          args:
            - --prefix
            - raw/curve_landing
            - --suite
            - ge/expectations/curve_landing.json
            - --suite-name
            - curve_landing_precommit
            - --allow-empty
  validate_raw_and_curated_premerge:
    on:
      - pre-merge
    hooks:
      - id: ge-premerge-raw
        type: executable
        description: Re-run raw landing Great Expectations suite prior to merge.
        properties:
          executable: hooks/run_ge_for_lakefs_event.py
          args:
            - --prefix
            - raw/curve_landing
            - --suite
            - ge/expectations/curve_landing.json
            - --suite-name
            - curve_landing_premerge
            - --allow-empty
      - id: ge-premerge-curated
        type: executable
        description: Validate curated curve observation table before merge.
        properties:
          executable: hooks/run_ge_for_lakefs_event.py
        args:
            - --prefix
            - market/curve_observation
            - --suite
            - ge/expectations/publish_curve_observation.json
            - --suite-name
            - curve_observation_premerge
            - --allow-empty

  # Branch protection policies
  protect_main_branch:
    on:
      - pre-commit
      - pre-merge
    hooks:
      - id: branch-protection
        type: executable
        description: Enforce branch protection policies for main branch.
        properties:
          executable: hooks/enforce_branch_policies.py
          args:
            - --branch
            - main
            - --require-approvals
            - --require-tests
            - --require-quality-gates

  # Data lifecycle management
  lifecycle_raw_data:
    on:
      - post-commit
    hooks:
      - id: lifecycle-raw
        type: executable
        description: Apply lifecycle policies to raw data after commit.
        properties:
          executable: hooks/apply_lifecycle_policies.py
          args:
            - --path
            - raw/*
            - --retention-days
            - "90"
            - --transition-to-cold
            - --archive-after-days
            - "365"

  lifecycle_curated_data:
    on:
      - post-commit
    hooks:
      - id: lifecycle-curated
        type: executable
        description: Apply lifecycle policies to curated data after commit.
        properties:
          executable: hooks/apply_lifecycle_policies.py
          args:
            - --path
            - market/*
            - --retention-days
            - "730"
            - --transition-to-cold
            - --archive-after-days
            - "1825"

  # Automatic cleanup of temporary branches
  cleanup_temp_branches:
    on:
      - post-commit
    hooks:
      - id: cleanup-temp
        type: executable
        description: Clean up temporary branches older than specified days.
        properties:
          executable: hooks/cleanup_temp_branches.py
          args:
            - --older-than-days
            - "7"
            - --exclude-patterns
            - "release/*,hotfix/*"
            - --dry-run

  # Schema validation on external data
  validate_external_schemas:
    on:
      - pre-commit
    hooks:
      - id: validate-external-schema
        type: executable
        description: Validate external data against expected schemas.
        properties:
          executable: hooks/validate_external_schemas.py
          args:
            - --path
            - external/*
            - --schema-registry-url
            - http://schema-registry:8081
            - --validate-compatibility
